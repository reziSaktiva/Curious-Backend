[{"C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\index.js":"1","C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\App.js":"2","C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\util\\AuthRoute.jsx":"3","C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\util\\HomeRoute.jsx":"4","C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\context\\Context.jsx":"5","C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\util\\UserRoute.jsx":"6","C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\util\\FacebookAuthRoute.jsx":"7","C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\pages\\register.jsx":"8","C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\pages\\login.jsx":"9","C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\pages\\landingPage.jsx":"10","C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\pages\\Profile.jsx":"11","C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\pages\\grid.jsx":"12","C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\pages\\registerFacebook.jsx":"13","C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\pages\\nearby.jsx":"14","C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\pages\\detailPost.jsx":"15","C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\pages\\Visited.jsx":"16","C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\GraphQL\\Queries.js":"17","C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\GraphQL\\Mutations.js":"18","C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\context\\posts.jsx":"19","C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\context\\auth.jsx":"20","C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\pages\\home.jsx":"21","C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\util\\style\\mapstyle.jsx":"22","C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\components\\LoginFacebookButton.jsx":"23","C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\components\\Notification.jsx":"24","C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\components\\Sidebar.jsx":"25","C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\components\\PostCard.jsx":"26","C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\components\\InfiniteScroll.jsx":"27","C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\util\\Firebase.jsx":"28","C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\context\\constant.jsx":"29","C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\util\\Session.jsx":"30","C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\components\\NavBar.jsx":"31","C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\util\\Config.jsx":"32","C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\pages\\mutedPosts.jsx":"33","C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\components\\PhotoGalerry.jsx":"34","C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\components\\PostNavBar.jsx":"35","C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\components\\LoginGoogleButton.jsx":"36","C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\pages\\registerGoogle.jsx":"37","C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\util\\GoogleAuthRoute.jsx":"38","C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\pages\\resetPassword.jsx":"39","C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\components\\AddPost\\index.jsx":"40","C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\pages\\subscribePosts.jsx":"41","C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\components\\AddPost\\ButtonAdd.jsx":"42","C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\components\\BottomBar\\index.jsx":"43","C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\components\\Buttons\\RepostButton\\index.jsx":"44","C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\components\\Buttons\\LikeButton\\index.jsx":"45","C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\components\\Buttons\\CommentButton\\index.jsx":"46","C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\pages\\popular.jsx":"47","C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\components\\SkeletonLoading.jsx":"48","C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\pages\\map\\index.jsx":"49","C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\util\\ConfigMap.jsx":"50"},{"size":1726,"mtime":1622017142409,"results":"51","hashOfConfig":"52"},{"size":2406,"mtime":1622436307922,"results":"53","hashOfConfig":"52"},{"size":395,"mtime":1619254437673,"results":"54","hashOfConfig":"52"},{"size":458,"mtime":1619254437673,"results":"55","hashOfConfig":"52"},{"size":307,"mtime":1619250274971,"results":"56","hashOfConfig":"52"},{"size":412,"mtime":1619254437674,"results":"57","hashOfConfig":"52"},{"size":503,"mtime":1619250274987,"results":"58","hashOfConfig":"52"},{"size":8599,"mtime":1619250274983,"results":"59","hashOfConfig":"52"},{"size":3819,"mtime":1622433050405,"results":"60","hashOfConfig":"52"},{"size":3674,"mtime":1622017142414,"results":"61","hashOfConfig":"52"},{"size":8453,"mtime":1622189328534,"results":"62","hashOfConfig":"52"},{"size":1479,"mtime":1622017142413,"results":"63","hashOfConfig":"52"},{"size":5737,"mtime":1622017142417,"results":"64","hashOfConfig":"52"},{"size":1425,"mtime":1622017142416,"results":"65","hashOfConfig":"52"},{"size":9167,"mtime":1622436307927,"results":"66","hashOfConfig":"52"},{"size":7395,"mtime":1622017142411,"results":"67","hashOfConfig":"52"},{"size":6278,"mtime":1622436307924,"results":"68","hashOfConfig":"52"},{"size":6018,"mtime":1622436307923,"results":"69","hashOfConfig":"52"},{"size":8900,"mtime":1622436307926,"results":"70","hashOfConfig":"52"},{"size":5612,"mtime":1622017142407,"results":"71","hashOfConfig":"52"},{"size":2209,"mtime":1622436307928,"results":"72","hashOfConfig":"52"},{"size":2304,"mtime":1619250274992,"results":"73","hashOfConfig":"52"},{"size":2061,"mtime":1622017142401,"results":"74","hashOfConfig":"52"},{"size":2282,"mtime":1622017142403,"results":"75","hashOfConfig":"52"},{"size":4639,"mtime":1622436337704,"results":"76","hashOfConfig":"52"},{"size":13166,"mtime":1622436307944,"results":"77","hashOfConfig":"52"},{"size":1550,"mtime":1622091692291,"results":"78","hashOfConfig":"52"},{"size":417,"mtime":1622017142420,"results":"79","hashOfConfig":"52"},{"size":540,"mtime":1622436307925,"results":"80","hashOfConfig":"52"},{"size":1420,"mtime":1622436307931,"results":"81","hashOfConfig":"52"},{"size":1245,"mtime":1622021551740,"results":"82","hashOfConfig":"52"},{"size":351,"mtime":1619250274987,"results":"83","hashOfConfig":"52"},{"size":1646,"mtime":1622017142415,"results":"84","hashOfConfig":"52"},{"size":7272,"mtime":1621075005896,"results":"85","hashOfConfig":"52"},{"size":1003,"mtime":1622088145542,"results":"86","hashOfConfig":"52"},{"size":1819,"mtime":1622017142402,"results":"87","hashOfConfig":"52"},{"size":5971,"mtime":1622017142418,"results":"88","hashOfConfig":"52"},{"size":539,"mtime":1622017142420,"results":"89","hashOfConfig":"52"},{"size":3063,"mtime":1622017142418,"results":"90","hashOfConfig":"52"},{"size":8971,"mtime":1622017142396,"results":"91","hashOfConfig":"52"},{"size":1615,"mtime":1622017142419,"results":"92","hashOfConfig":"52"},{"size":595,"mtime":1622017142395,"results":"93","hashOfConfig":"52"},{"size":1378,"mtime":1622017142397,"results":"94","hashOfConfig":"52"},{"size":1187,"mtime":1622017142400,"results":"95","hashOfConfig":"52"},{"size":1796,"mtime":1622017142399,"results":"96","hashOfConfig":"52"},{"size":1013,"mtime":1622017142398,"results":"97","hashOfConfig":"52"},{"size":2180,"mtime":1622021551742,"results":"98","hashOfConfig":"52"},{"size":410,"mtime":1622091471571,"results":"99","hashOfConfig":"52"},{"size":3905,"mtime":1622436307929,"results":"100","hashOfConfig":"52"},{"size":71,"mtime":1622436307930,"results":"101","hashOfConfig":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"105"},"1a52b8a",{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"105"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"105"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"105"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"105"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"105"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"105"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"105"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"105"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"105"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"163","messages":"164","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"105"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"105"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"184"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"105"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"105"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"105"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"105"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"105"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"105"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"105"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"105"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\index.js",["225"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { ApolloProvider, ApolloClient, InMemoryCache, HttpLink, from} from '@apollo/client';\r\nimport { setContext } from 'apollo-link-context'\r\nimport { concat } from 'apollo-link'\r\nimport { onError } from 'apollo-link-error';\r\nimport { isMobile } from \"react-device-detect\";\r\n\r\n// Importing styles\r\nimport './index.css'\r\n\r\n// Importing components\r\nimport App from './App'\r\n\r\nconst link = from([\r\n  new HttpLink({uri: 'http://localhost:5000/insvire-curious-app12/us-central1/graphql'})\r\n])\r\n\r\nconst errorLink = onError(\r\n  ({ graphQLErrors, networkError, operation, forward }) => {\r\n    if (graphQLErrors) {\r\n      for (let err of graphQLErrors) {\r\n        switch (err.extensions.code) {\r\n          case 'UNAUTHENTICATED':\r\n            // error code is set to UNAUTHENTICATED\r\n            // when AuthenticationError thrown in resolver\r\n            console.log('do auto logout')\r\n          default:\r\n            console.log(err.extensions)\r\n        }\r\n      }\r\n    }\r\n    if (networkError) {\r\n      console.log(`[Network error]: ${networkError}`);\r\n      // if you would also like to retry automatically on\r\n      // network errors, we recommend that you use\r\n      // apollo-link-retry\r\n    }\r\n  }\r\n);\r\n\r\nconst authLink = setContext(() => {\r\n  const token = localStorage.token\r\n\r\n  return {\r\n    headers: {\r\n      Authorization : token ? `Bearer ${token}` : ''\r\n    }\r\n  }\r\n})\r\n\r\nconst client = new ApolloClient({\r\n  cache: new InMemoryCache(),\r\n  link: concat(errorLink, concat(authLink, link))\r\n});\r\n\r\nwindow.isMobile = isMobile;\r\n\r\nReactDOM.render(\r\n  <ApolloProvider client={client}>\r\n    <App />\r\n  </ApolloProvider>,\r\n  document.getElementById('root')\r\n)\r\n",["226","227"],"C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\App.js",[],"C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\util\\AuthRoute.jsx",[],"C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\util\\HomeRoute.jsx",["228"],"import React, { useContext } from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport home from '../pages/home';\r\n\r\nfunction HomeRoute({ component: Component, ...rest }) {\r\n    const user = localStorage.token\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={props =>\r\n                user ? <Route exact path=\"/\" component={home} /> : <Component {...props} />\r\n            }\r\n        />\r\n    )\r\n}\r\n\r\nexport default HomeRoute;","C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\context\\Context.jsx",[],"C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\util\\UserRoute.jsx",["229"],"import React, { useContext } from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\n\r\nfunction UserRoute({ component: Component, ...rest }) {\r\n    const user = localStorage.token\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={props =>\r\n                !user ? <Redirect to='/' /> : <Component {...props} />\r\n            }\r\n        />\r\n    )\r\n}\r\n\r\nexport default UserRoute;","C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\util\\FacebookAuthRoute.jsx",[],"C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\pages\\register.jsx",[],"C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\pages\\login.jsx",["230"],"C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\pages\\landingPage.jsx",[],"C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\pages\\Profile.jsx",["231","232","233","234","235","236","237","238","239"],"import React, { useContext, useEffect, useState } from 'react'\r\nimport cn from 'classnames';\r\nimport { useQuery } from '@apollo/client'\r\nimport { chunk } from 'lodash';\r\nimport { GET_PROFILE_POSTS, GET_PROFILE_LIKED_POSTS } from '../GraphQL/Queries'\r\nimport { AuthContext } from \"../context/auth\";\r\nimport 'antd/dist/antd.css';\r\nimport '../App.css'\r\nimport {  Col, Row, Tabs } from 'antd';\r\nimport { EditOutlined } from \"@ant-design/icons\";\r\n\r\n//assets\r\nimport Pin from '../assets/pin-svg-25px.svg'\r\nimport IconCrash from '../assets/ic-crash.png';\r\n\r\n//location\r\nimport Geocode from \"react-geocode\";\r\nimport \"react-minimal-side-navigation/lib/ReactMinimalSideNavigation.css\";\r\nimport \"react-minimal-side-navigation/lib/ReactMinimalSideNavigation.css\";\r\nimport { Link } from 'react-router-dom';\r\nimport PostCard from '../components/PostCard';\r\n\r\n\r\n\r\nfunction Profile(props) {\r\n    const { data: getProfilePosts, loading } = useQuery(GET_PROFILE_POSTS);\r\n    const { data: getProfileLikedPost } = useQuery(GET_PROFILE_LIKED_POSTS);\r\n    const { user, liked } = useContext(AuthContext);\r\n    const [gallery, setGallery] = useState([]); \r\n    const [address, setAddress] = useState(\"\");\r\n    //set location\r\n    const loc = localStorage.location;\r\n\r\n    const location = loc ? JSON.parse(loc) : null\r\n\r\n    if (location) {\r\n\r\n    Geocode.fromLatLng(location.lat, location.lng).then(\r\n        (response) => {\r\n        const address = response.results[0].address_components[1].short_name;\r\n        setAddress(address);\r\n\r\n        },\r\n        (error) => {\r\n        console.error(error);\r\n        }\r\n    );\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!loading && getProfilePosts) {\r\n            const filterByMedia = getProfilePosts && getProfilePosts.getProfilePosts.filter(post => {\r\n                const hasMedia = post.media && post.media.length >=1;\r\n\r\n                if (hasMedia) return post\r\n            });\r\n\r\n\r\n            const gallery = chunk(filterByMedia, 4);\r\n\r\n            setGallery(gallery);\r\n        }\r\n    }, [loading, getProfilePosts]);\r\n\r\nconst likeCounter = getProfilePosts && getProfilePosts.getProfilePosts.map(doc => doc.likeCount)\r\n    const { TabPane } = Tabs;\r\n\r\n    console.log('gallery: ', gallery)\r\n    const Demo = () => (\r\n        <Tabs defaultActiveKey=\"1\" centered>\r\n            <TabPane tab=\"Posts\" key=\"1\">\r\n            {!getProfilePosts ? null\r\n                    : getProfilePosts.getProfilePosts.map((post, key) => {\r\n                        return (\r\n                            user && \r\n                                <div key={`posts${post.id} ${key}`}>\r\n                                <PostCard post={post} loading={loading} />\r\n                            </div>\r\n                        )\r\n                    })}\r\n            </TabPane>\r\n            <TabPane tab=\"Liked\" key=\"2\">\r\n            {!getProfileLikedPost ? null\r\n                    : getProfileLikedPost.getProfileLikedPost.map((post, key) => {\r\n                        \r\n                        return (\r\n                            user && \r\n                                <div key={`posts${post.id} ${key}`}>\r\n                                <PostCard post={post} loading={loading} />\r\n                            </div>\r\n                        )\r\n                    })}\r\n            </TabPane>\r\n\r\n            <TabPane tab=\"Media\" key=\"3\">\r\n            {/* {!data ? null\r\n                    : data.getProfilePosts.map((post, key) => {\r\n                        return (\r\n                            user && \r\n                                <div key={`posts${post.id} ${key}`}>\r\n                                <PhotoGallery post={post} loading={loading} />\r\n                            </div>\r\n                        )\r\n                    })} */}\r\n                    {gallery.length && gallery.map(media => (\r\n                        <div className=\"gallery\">\r\n                            {media.length && media.map((photo, idx) => {\r\n                                const imgClass = cn({\r\n                                    'gallery_item_right': idx == 1,\r\n                                    'gallery_item_left': idx == 2,\r\n                                    'gallery__img': idx != 1 || idx != 2\r\n                                })\r\n                                return (\r\n                                    <img\r\n                                        src={photo.media}\r\n                                        onError={(e) => {\r\n                                            e.target.onerror = null;\r\n                                            e.target.src = IconCrash;\r\n                                        }} \r\n                                        className={imgClass}  alt=\"Image 1\"\r\n                                    />\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    ))}\r\n            </TabPane>\r\n            \r\n        </Tabs>\r\n    );\r\n    return (\r\n        <div>\r\n            <Row>\r\n                    <Col span={6}>\r\n                    <button class=\"ui inverted basic button\" type=\"text\" onClick={() => props.history.goBack()}>\r\n                            <i class=\"chevron left icon\" style={{ color: 'black' }}></i>\r\n                    </button>\r\n                    </Col>\r\n                    <Col span={12} style={{textAlign: \"center\"}}>\r\n                    <h4>My profile</h4>\r\n                    </Col>\r\n                    <Col span={6} style={{textAlign: \"right\"}}>\r\n                    <button class=\"ui inverted basic button\" type=\"text\">\r\n                            <i class=\"ellipsis horizontal icon\" style={{ color: 'black' }}></i>\r\n                    </button>\r\n                    </Col>\r\n                </Row>\r\n\r\n            <div style={{position:'fixed', width: \"100%\"}}>\r\n                <div class=\"ui divider\" style={{ marginLeft: -14 }}/>\r\n            </div>\r\n\r\n            <div style={{margin: \"auto\", width: 80, marginTop: 60, marginBottom: -10}}>\r\n                <div style={{position: \"relative\",textAlign: \"center\", width: 80}}>\r\n                    <img src={user.profilePicture} \r\n                        style={{\r\n                            borderRadius:\"50%\",\r\n                            objectFit: \"cover\",\r\n                            width: 80,\r\n                            height: 80,\r\n                        }}\r\n                    />\r\n                    <div style={{ backgroundColor: \"#7f57ff\", color: \"white\", borderRadius: \"50%\", width: 21, height: 21, position: 'absolute', bottom: 0, right : 0 }}>\r\n                    <EditOutlined />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n                <h4 style={{textAlign: \"center\"}}>{user.username}</h4>\r\n                <div style={{ textAlign: \"center\", margin: \"auto\", width: \"50%\" }}>\r\n                    <Link to=\"/\"><img src={Pin} style={{width:20, marginTop: -5}} /><span style={{ fontSize: 12 }}>{address}</span></Link>\r\n                </div>\r\n\r\n\r\n                <div style={{ textAlign: \"center\", margin: \"auto\", width: \"50%\", marginTop: 20 }}>\r\n                    <Row>\r\n                        <Col span={8}> \r\n                            <h5>{getProfilePosts? getProfilePosts.getProfilePosts.length: 0}</h5>\r\n                            <p>Post</p>\r\n                        </Col>\r\n                        <Col span={8}> \r\n                            <h5>12</h5>\r\n                            <p>Repost</p>\r\n                        </Col>\r\n                        <Col span={8}> \r\n                            <h5>{getProfilePosts&& likeCounter.length >= 1 ? likeCounter.reduce((total, num) => total += num) : 0}</h5>\r\n                            <p>Likes</p>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n                \r\n                <div style={{ textAlign: \"center\", margin: \"auto\", width: \"50%\", marginTop: 20, marginBottom: 40 }}>\r\n                <div class=\"ui action input\"\r\n                    style={{height: 25}}>\r\n                    <input type=\"text\" value=\"http://ww.short.url/c0opq\" />\r\n                    <button class=\"ui teal right icon button\" style={{ backgroundColor: '#7F57FF', fontSize: 10 }}>\r\n                        Copy\r\n                </button>\r\n                        </div>\r\n                </div>\r\n                \r\n                        {Demo()}\r\n                    </div>\r\n    )\r\n}\r\n\r\nexport default Profile","C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\pages\\grid.jsx",[],"C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\pages\\registerFacebook.jsx",[],"C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\pages\\nearby.jsx",["240"],"import { useContext, useEffect } from \"react\";\r\nimport { get } from \"lodash\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport PostCard from \"../components/PostCard\";\r\nimport InfiniteScroll from \"../components/InfiniteScroll\";\r\n\r\nimport { GET_POSTS_BASED_ON_NEAREST_LOC } from \"../GraphQL/Queries\";\r\nimport { AuthContext } from \"../context/auth\";\r\n\r\nconst NearbyPost = (props) => {\r\n  const { user } = useContext(AuthContext)\r\n  const lat = JSON.parse(localStorage.location).lat;\r\n  const lng = JSON.parse(localStorage.location).lng;\r\n\r\n  const { data, loading: loadingPosts } = useQuery(\r\n    GET_POSTS_BASED_ON_NEAREST_LOC,\r\n    {\r\n      variables: { lat: lat.toString(), lng: lng.toString() },\r\n    }\r\n  );\r\n\r\n  const posts = get(data, \"getPostBasedOnNearestLoc\") || [];\r\n\r\n  if (loadingPosts) return <div>loading...</div>;\r\n\r\n  return (\r\n    <div>\r\n      <InfiniteScroll isLoading={loadingPosts}>\r\n        {!posts\r\n          ? null\r\n          : posts.map((post, key) => {\r\n              return user &&\r\n                post.muted.find((mute) => mute.owner === user.username) ? (\r\n                <div key={`posts${post.id} ${key}`}></div>\r\n              ) : (\r\n                <div key={`posts${post.id} ${key}`}>\r\n                  <PostCard post={post} loading={loadingPosts} />\r\n                </div>\r\n              );\r\n            })}\r\n      </InfiniteScroll>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NearbyPost;\r\n","C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\pages\\detailPost.jsx",["241","242","243","244","245","246","247"],"C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\pages\\Visited.jsx",["248"],"import React from 'react'\r\nimport 'antd/dist/antd.css';\r\nimport './Visited.css'\r\nimport { Col, Row, Card } from 'antd';\r\nimport imageOne from '../assets/beachone.jfif'\r\n\r\n\r\nexport default function Visited() {\r\n    const breakPoints = [\r\n        { width: 1, itemsToShow: 1 },\r\n        { width: 550, itemsToShow: 2 },\r\n        { width: 768, itemsToShow: 3 },\r\n        { width: 1200, itemsToShow: 4 },\r\n      ];\r\n\r\n    return (\r\n        <div>\r\n            <Row>\r\n                    <Col span={6}>\r\n                    <button class=\"ui inverted basic button\" type=\"text\" onClick={() => {window.history.back()}}>\r\n                            <i class=\"chevron left icon\" style={{ color: 'black' }}></i>\r\n                    </button>\r\n                    </Col>\r\n                    <Col span={12} style={{textAlign: \"center\"}}>\r\n                    <h4>Visited Places</h4>\r\n                    </Col>\r\n                    <Col span={6} style={{textAlign: \"right\"}}>\r\n                    <button class=\"ui inverted basic button\" type=\"text\">\r\n                            <i class=\"ellipsis horizontal icon\" style={{ color: 'black' }}></i>\r\n                    </button>\r\n                    </Col>\r\n                </Row>\r\n\r\n            <div className=\"site-card-wrapper\">\r\n                <Row style={{margin: 10}}>\r\n                    <Col span={8}>\r\n                        <Card \r\n                        className= \"VisitedClass\"\r\n                        bordered={false} \r\n                        cover={\r\n                        <div>\r\n                            <img alt=\"example\" src={imageOne} style={{width: 187, height: 200, margin: 5, borderRadius: 5}} />\r\n                            <h3 style={{ position: \"absolute\",\r\n                                    bottom: 14,\r\n                                    left: 10,\r\n                                    color: \"white\",\r\n                                    fontWeight: \"1200\",\r\n                                    fontSize: 17,\r\n                                    width: 180,\r\n                                    overflow: \"hidden\",\r\n                                    textOverflow: \"ellipsis\"\r\n                                    }}>Tanjung Pinang, Jawa tengah</h3> \r\n                        </div>\r\n                        } />\r\n                    </Col>\r\n                    <Col span={8}>\r\n                    <Card \r\n                        className= \"VisitedClass\"\r\n                        bordered={false} \r\n                        cover={\r\n                        <div>\r\n                            <img alt=\"example\" src={imageOne} style={{width: 187, height: 200, margin: 5, borderRadius: 5}} />\r\n                            <h3 style={{ position: \"absolute\",\r\n                                    bottom: 14,\r\n                                    left: 10,\r\n                                    color: \"white\",\r\n                                    fontWeight: \"1200\",\r\n                                    fontSize: 17,\r\n                                    width: 180,\r\n                                    overflow: \"hidden\",\r\n                                    textOverflow: \"ellipsis\"\r\n                                    }}>Tanjung Pinang, Jawa tengah</h3> \r\n                        </div>\r\n                        } />\r\n                    </Col>\r\n                    <Col span={8}>\r\n                    <Card \r\n                        className= \"VisitedClass\"\r\n                        bordered={false} \r\n                        cover={\r\n                        <div>\r\n                            <img alt=\"example\" src={imageOne} style={{width: 187, height: 200, margin: 5, borderRadius: 5}} />\r\n                            <h3 style={{ position: \"absolute\",\r\n                                    bottom: 14,\r\n                                    left: 10,\r\n                                    color: \"white\",\r\n                                    fontWeight: \"1200\",\r\n                                    fontSize: 17,\r\n                                    width: 180,\r\n                                    overflow: \"hidden\",\r\n                                    textOverflow: \"ellipsis\"\r\n                                    }}>Tanjung Pinang, Jawa tengah</h3> \r\n                        </div>\r\n                        } />\r\n                    </Col>\r\n                    <Col span={8}>\r\n                    <Card \r\n                    className= \"VisitedClass\"\r\n                        bordered={false} \r\n                        cover={\r\n                        <div>\r\n                            <img alt=\"example\" src={imageOne} style={{width: 187, height: 200, margin: 5, borderRadius: 5}} />\r\n                            <h3 style={{ position: \"absolute\",\r\n                                    bottom: 14,\r\n                                    left: 10,\r\n                                    color: \"white\",\r\n                                    fontWeight: \"1200\",\r\n                                    fontSize: 17,\r\n                                    width: 180,\r\n                                    overflow: \"hidden\",\r\n                                    textOverflow: \"ellipsis\"\r\n                                    }}>Tanjung Pinang, Jawa tengah</h3> \r\n                        </div>\r\n                        } />\r\n                    </Col>\r\n                    <Col span={8}>\r\n                    <Card \r\n                    className= \"VisitedClass\"\r\n                        bordered={false} \r\n                        cover={\r\n                        <div>\r\n                            <img alt=\"example\" src={imageOne} style={{width: 187, height: 200, margin: 5, borderRadius: 5}} />\r\n                            <h3 style={{ position: \"absolute\",\r\n                                    bottom: 14,\r\n                                    left: 10,\r\n                                    color: \"white\",\r\n                                    fontWeight: \"1200\",\r\n                                    fontSize: 17,\r\n                                    width: 180,\r\n                                    overflow: \"hidden\",\r\n                                    textOverflow: \"ellipsis\"\r\n                                    }}>Tanjung Pinang, Jawa tengah</h3> \r\n                        </div>\r\n                        } />\r\n                    </Col>\r\n                    <Col span={8}>\r\n                    <Card \r\n                    className= \"VisitedClass\"\r\n                        bordered={false} \r\n                        cover={\r\n                        <div>\r\n                            <img alt=\"example\" src={imageOne} style={{width: 187, height: 200, margin: 5, borderRadius: 5}} />\r\n                            <h3 style={{ position: \"absolute\",\r\n                                    bottom: 14,\r\n                                    left: 10,\r\n                                    color: \"white\",\r\n                                    fontWeight: \"1200\",\r\n                                    fontSize: 17,\r\n                                    width: 180,\r\n                                    overflow: \"hidden\",\r\n                                    textOverflow: \"ellipsis\"\r\n                                    }}>Tanjung Pinang, Jawa tengah</h3> \r\n                        </div>\r\n                        } />\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}","C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\GraphQL\\Queries.js",[],"C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\GraphQL\\Mutations.js",[],"C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\context\\posts.jsx",["249"],"C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\context\\auth.jsx",["250","251","252","253"],"// Modules\r\nimport React, { useReducer, createContext, useEffect, useMemo } from \"react\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { get } from \"lodash\";\r\n\r\n// Helper\r\nimport { Session } from \"../util/Session\";\r\nimport { auth } from \"../util/Firebase\";\r\n\r\n// Graphql\r\nimport { GET_USER_DATA } from \"../GraphQL/Queries\";\r\n\r\n// Constant\r\nimport {\r\n  GET_LOCATION,\r\n  SET_NOTIFICATIONS,\r\n  SET_USER_DATA,\r\n  REGISTER_WITH_fACEBOOK,\r\n  REGISTER_WITH_GOOGLE,\r\n  LOGOUT,\r\n  LS_LOCATION,\r\n  LS_TOKEN,\r\n  NOTIFICATION_READ\r\n} from \"./constant\";\r\n\r\nconst initialState = {\r\n  user: \"\",\r\n  location: \"\",\r\n  liked: [],\r\n  notifications: [],\r\n  facebookData: null,\r\n  googleData: null\r\n};\r\n\r\nconst { location, user } = Session({ onLogout: () => {} });\r\n\r\n// Reinit Users\r\ninitialState.user = user;\r\ninitialState.location = location ? location : '';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nfunction authReducer(state, action) {\r\n  switch (action.type) {\r\n    case GET_LOCATION:\r\n      return {\r\n        ...state,\r\n        user: {\r\n          ...state.user,\r\n          location: action.payload,\r\n        },\r\n      };\r\n    case SET_NOTIFICATIONS:\r\n      return {\r\n        ...state,\r\n        notifications: action.payload,\r\n      };\r\n    case \"SET_LIKED_DATA\":\r\n      return {\r\n        ...state,\r\n        liked: action.payload,\r\n      };\r\n    case SET_USER_DATA:\r\n      return {\r\n        ...state,\r\n        user: action.payload,\r\n      };\r\n    case REGISTER_WITH_fACEBOOK:\r\n      return {\r\n        ...state,\r\n        facebookData: action.payload,\r\n      };\r\n      case REGISTER_WITH_GOOGLE:\r\n      return {\r\n        ...state,\r\n        googleData: action.payload,\r\n      };\r\n    case LOGOUT:\r\n      return {\r\n        ...state,\r\n        user: null,\r\n      };\r\n    case NOTIFICATION_READ:\r\n      return {\r\n        ...state,\r\n        notifications: state.notifications.map((notif) => {\r\n          if (notif.id === action.payload.id) {\r\n            const updatedPosts = {\r\n              ...notif,\r\n              read: true,\r\n            };\r\n            return updatedPosts;\r\n          }\r\n\r\n          return notif;\r\n        })\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction showError(error) {\r\n  switch (error.code) {\r\n    case error.PERMISSION_DENIED:\r\n      console.log(\"User denied the request for Geolocation.\");\r\n      break;\r\n    case error.POSITION_UNAVAILABLE:\r\n      console.log(\"Location information is unavailable.\");\r\n      break;\r\n    case error.TIMEOUT:\r\n      console.log(\"The request to get user location timed out.\");\r\n      break;\r\n    case error.UNKNOWN_ERROR:\r\n      console.log(\"An unknown error occurred.\");\r\n      break;\r\n  }\r\n}\r\n\r\nexport function AuthProvider(props) {\r\n  const [state, dispatch] = useReducer(authReducer, initialState);\r\n\r\n  // Check Sessions\r\n  const { token } = Session({ onLogout: logout });\r\n\r\n  const { user, facebookData, googleData, liked, notifications } = state\r\n\r\n  // Mutations\r\n  const [\r\n    loadDataUser,\r\n    { refetch, called, loading, data, error },\r\n  ] = useLazyQuery(GET_USER_DATA);\r\n\r\n  useEffect(() => {\r\n    if (token) {\r\n      // do load data user with token from localstorage\r\n      if (!called) {\r\n        return loadDataUser();\r\n      }\r\n\r\n      return refetch();\r\n    } else {\r\n      // do check session for user login with provider\r\n      auth.onAuthStateChanged((user) => {\r\n        if (user) {\r\n          if (!called) return loadDataUser();\r\n\r\n          return refetch();\r\n        }\r\n\r\n        return logout();\r\n      });\r\n    }\r\n  }, [token]);\r\n\r\n  useEffect(() => {\r\n    const hasErrors = error && error.length;\r\n\r\n    if (hasErrors) logout();\r\n  }, [error]);\r\n\r\n  useEffect(() => {\r\n    if (!loading && data && !error) {\r\n      const user = get(data, \"getUserData.user\", {});\r\n      const notifications = get(data, \"getUserData.notifications\", []);\r\n      const likes = get(data, \"getUserData.liked\", []);\r\n\r\n      dispatch({\r\n        type: SET_USER_DATA,\r\n        payload: user,\r\n      });\r\n\r\n      dispatch({\r\n        type: \"SET_LIKED_DATA\",\r\n        payload: likes,\r\n      });\r\n\r\n      dispatch({\r\n        type: SET_NOTIFICATIONS,\r\n        payload: notifications,\r\n      });\r\n    }\r\n  }, [loading, data]);\r\n\r\n  function getGeoLocation(position) {\r\n    const location = {\r\n      lat: position.coords.latitude,\r\n      lng: position.coords.longitude,\r\n    };\r\n\r\n    localStorage.setItem(LS_LOCATION, JSON.stringify(location));\r\n\r\n    dispatch({\r\n      type: GET_LOCATION,\r\n      payload: location,\r\n    });\r\n  }\r\n\r\n  function login(userData) {\r\n    navigator.geolocation.getCurrentPosition(getGeoLocation, showError);\r\n    console.log(\"userdatanyaaaa\", userData);\r\n\r\n    localStorage.setItem(LS_TOKEN, userData);\r\n\r\n    dispatch({\r\n      type: SET_USER_DATA,\r\n      payload: userData,\r\n    });\r\n  }\r\n\r\n  function loadFacebookData(facebookData) {\r\n    dispatch({\r\n      type: REGISTER_WITH_fACEBOOK,\r\n      payload: facebookData,\r\n    });\r\n  }\r\n\r\n  function loadGoogleData(googleData) {\r\n    dispatch({\r\n      type: REGISTER_WITH_GOOGLE,\r\n      payload: googleData,\r\n    });\r\n  }\r\n\r\n  function notificationRead(data) {\r\n    dispatch({\r\n      type: NOTIFICATION_READ,\r\n      payload: data\r\n    })\r\n  }\r\n\r\n  function logout() {\r\n    dispatch({ type: LOGOUT });\r\n  }\r\n\r\n  const authProps = useMemo(\r\n    () => ({\r\n      user,\r\n      facebookData,\r\n      googleData,\r\n      liked,\r\n      notifications,\r\n      notificationRead,\r\n      login,\r\n      logout,\r\n      loadFacebookData, // functions context\r\n      loadGoogleData\r\n    }),\r\n    [state]\r\n  );\r\n\r\n  return <AuthContext.Provider value={authProps} {...props} />;\r\n}\r\n","C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\pages\\home.jsx",["254","255","256"],"C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\util\\style\\mapstyle.jsx",["257"],"export default [\r\n    {\r\n        \"featureType\": \"all\",\r\n        \"elementType\": \"labels\",\r\n        \"stylers\": [\r\n            {\r\n                \"gamma\": 0.26\r\n            },\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"administrative.province\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"on\"\r\n            },\r\n            {\r\n                \"lightness\": -50\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"administrative.province\",\r\n        \"elementType\": \"labels.text\",\r\n        \"stylers\": [\r\n            {\r\n                \"lightness\": 20\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"administrative.province\",\r\n        \"elementType\": \"labels.text.stroke\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"poi\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"hue\": \"#ffffff\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road\",\r\n        \"elementType\": \"labels.text.stroke\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.highway\",\r\n        \"elementType\": \"geometry\",\r\n        \"stylers\": [\r\n            {\r\n                \"lightness\": 50\r\n            },\r\n            {\r\n                \"hue\": \"#ffffff\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.arterial\",\r\n        \"elementType\": \"geometry\",\r\n        \"stylers\": [\r\n            {\r\n                \"lightness\": 20\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.arterial\",\r\n        \"elementType\": \"labels.text\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"on\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.local\",\r\n        \"elementType\": \"labels.text\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"on\"\r\n            }\r\n        ]\r\n    }\r\n]","C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\components\\LoginFacebookButton.jsx",["258"],"import React, { useContext, useState } from 'react'\r\nimport { Button } from 'antd'\r\n\r\nimport { AuthContext } from '../context/auth'\r\nimport { FacebookProvider, auth } from '../util/Firebase'\r\nimport { gql, useMutation } from '@apollo/client'\r\nimport { LOGIN_USER_FACEBOOK } from '../GraphQL/Mutations'\r\n\r\nconst CHECK_USER_BY_FACEBOOK = gql`\r\n  mutation check($username: String!){\r\n    checkUserWithFacebook(username: $username)\r\n  }\r\n`\r\n\r\nexport default function LoginFacebookButton({ props }) {\r\n  const { loadFacebookData, login } = useContext(AuthContext)\r\n  const [dataFacebook, setFacebookData] = useState({})\r\n\r\n  // const [loginFacebook] = useMutation(LOGIN_USER_FACEBOOK, {\r\n  //   update(_, { data: { loginWithFacebook } }) {\r\n\r\n  //     login(loginWithFacebook)\r\n  //   }\r\n  // })\r\n\r\n  const [check] = useMutation(CHECK_USER_BY_FACEBOOK, {\r\n    update(_, { data: { checkUserWithFacebook } }) {\r\n      if (!checkUserWithFacebook) {\r\n        loadFacebookData(dataFacebook)\r\n        props.history.push('/register/facebook')\r\n      } else {\r\n        const { token } = dataFacebook\r\n        // loginFacebook({ variables: { username, token } })\r\n        login(token)\r\n        props.history.push('/')\r\n      }\r\n    },\r\n    onError(err) {\r\n      console.log(err.message)\r\n    }\r\n  })\r\n\r\n  const signInWithFacebook = async () => {\r\n    auth.signInWithPopup(FacebookProvider).then(function (result) {\r\n      let user = result.user;\r\n      let facebookData = {\r\n        username: user.displayName,\r\n        email: user.email,\r\n        imageUrl: user.photoURL,\r\n        id: user.uid\r\n      }\r\n      user.getIdToken().then(token => {\r\n        facebookData.token = token\r\n      })\r\n      setFacebookData(facebookData)\r\n\r\n      check({ variables: { username: user.displayName } })\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Button onClick={signInWithFacebook} className=\"ui button\" style={{ width: \"100%\", height: 45, color: 'black', background: '#7F57FF', borderRadius: 5 }}>\r\n      <i className=\"facebook icon\" />\r\n          Continue with Facebook\r\n    </Button>\r\n  )\r\n}\r\n\r\n","C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\components\\Notification.jsx",["259","260","261"],"import React, { useContext } from \"react\";\r\nimport { Card, Button } from \"antd\";\r\nimport { AuthContext } from \"../context/auth\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { READ_NOTIFICATION } from \"../GraphQL/Mutations\";\r\n\r\nexport default function Notification() {\r\n  const { notifications, notificationRead } = useContext(AuthContext);\r\n\r\n  const [readNotification] = useMutation(READ_NOTIFICATION, {\r\n    update(_, { data: { readNotification } }) {\r\n      console.log(readNotification);\r\n      notificationRead(readNotification);\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div style={{ position: 'sticky', zIndex: 1}}>\r\n      <div style={{ position: \"absolute\", left: 0, right: 0 }}>\r\n        <Card\r\n          title=\"Notification\"\r\n          extra={\r\n            <a href=\"#\">\r\n              <i\r\n                className=\"ellipsis horizontal icon\"\r\n                style={{ color: \"black\" }}\r\n              ></i>\r\n            </a>\r\n          }\r\n          style={{ width: \"100%\" }}\r\n        >\r\n          {notifications &&\r\n            notifications.map((notif, key) => {\r\n              let type = \"\";\r\n              let text = \"\";\r\n              switch (notif.type) {\r\n                case \"LIKE\":\r\n                  type = \"liked\";\r\n                  text = \"iike\";\r\n                  break;\r\n                case \"COMMENT\":\r\n                  type = \"commented\";\r\n                  text = \"comment\";\r\n                default:\r\n                  break;\r\n              }\r\n\r\n              return (\r\n                <Link\r\n                  to={`/post/${notif.postId}`}\r\n                  onClick={() =>\r\n                    readNotification({ variables: { id: notif.id } })\r\n                  }\r\n                  name={notif.id}\r\n                  key={`notif${key}`}\r\n                  style={notif.read ? { fontSize: 13, color: \"black\",  } : { fontSize: 13, fontWeight: \"bold\", color: \"black\", }}\r\n                >\r\n                  <p style={{ marginBottom: 5}}>\r\n                    {notif.displayName}{\" \"}\r\n                    <span>{`${type}: this is a ${text} post.`}</span>{\" \"}\r\n                  </p>\r\n                </Link>\r\n              );\r\n            })}\r\n        </Card>\r\n      </div>\r\n    </div>\r\n    \r\n  );\r\n}\r\n","C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\components\\Sidebar.jsx",["262"],"C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\components\\PostCard.jsx",["263","264","265","266","267","268","269","270","271","272","273"],"C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\components\\InfiniteScroll.jsx",[],"C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\util\\Firebase.jsx",[],"C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\context\\constant.jsx",[],"C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\util\\Session.jsx",[],"C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\components\\NavBar.jsx",["274","275","276","277","278","279"],"import { Button, Radio, Tabs } from 'antd';\r\nimport React, { useContext, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport { StickyContainer, Sticky } from 'react-sticky';\r\n// Semantic\r\nimport { Menu } from 'semantic-ui-react'\r\n\r\nimport '../App.css'\r\n\r\n\r\nexport default function Login() {\r\n  const history = useHistory();\r\n  const parentTab = history.location.pathname == '/populer' ? 'populer' : 'latest'\r\n  const [nav, setNav] = useState({ value2: parentTab })\r\n\r\n  const optionsWithDisabled = [\r\n    { label: 'Latest', value: 'latest' },\r\n    { label: 'Popular', value: 'popular' },\r\n  ];\r\n\r\n  const onChange2 = e => {\r\n    setNav({\r\n      value2: e.target.value,\r\n    });\r\n    history.push(`/${e.target.value == \"latest\" ? '' : e.target.value}`)\r\n  };\r\n\r\n  const { value2 } = nav;\r\n\r\n  return (\r\n    <StickyContainer style={{ position: \"center\" }}>\r\n      <Menu pointing secondary size='massive'>\r\n        <div className=\"centeredButton\">\r\n          <Radio.Group\r\n            options={optionsWithDisabled}\r\n            onChange={onChange2}\r\n            value={value2}\r\n            optionType=\"button\"\r\n            buttonStyle=\"solid\"\r\n          />\r\n        </div>\r\n      </Menu>\r\n    </StickyContainer>\r\n  )\r\n}","C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\util\\Config.jsx",[],"C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\pages\\mutedPosts.jsx",["280","281","282"],"import React, { useContext, useEffect, useRef } from 'react'\r\n\r\nimport { useQuery } from '@apollo/client'\r\nimport { GET_MUTED_POSTS, GET_POSTS } from '../GraphQL/Queries'\r\nimport { PostContext } from '../context/posts'\r\n\r\nimport InfiniteScroll from '../components/InfiniteScroll'\r\nimport PostCard from '../components/PostCard'\r\nimport { AuthContext } from '../context/auth'\r\nimport NavBar from '../components/NavBar'\r\n\r\n\r\nfunction MutedPost() {\r\n    const { data } = useQuery(GET_MUTED_POSTS);\r\n\r\n    const _isMounted = useRef(false);\r\n    const { mutedPost, setMutedPost, loadingData, loading } = useContext(PostContext)\r\n    const { user } = useContext(AuthContext)\r\n\r\n    useEffect(() => {\r\n        if (!_isMounted.current && data) { // check if doesn't fetch data\r\n            if (!data) {\r\n                loadingData();\r\n\r\n                return;\r\n            }\r\n\r\n            setMutedPost(data.mutedPosts)\r\n            \r\n            // set did mount react\r\n            _isMounted.current = true;\r\n\r\n            return;\r\n        }\r\n    }, [data, _isMounted])\r\n\r\n    return (\r\n        <div>\r\n            <NavBar />\r\n            {user ? (<div>\r\n                {!mutedPost ? null\r\n                    : mutedPost.map((post, key) => {\r\n                        return (\r\n                                <div key={`posts${post.id} ${key}`}>\r\n                                    {console.log(post)}\r\n                                <PostCard post={post} loading={loading} />\r\n                            </div>\r\n                        )\r\n                    })}\r\n            </div>) : null}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MutedPost","C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\components\\PhotoGalerry.jsx",["283","284","285","286","287","288","289","290","291","292","293","294","295","296","297","298","299","300","301","302"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { List } from \"antd\";\r\nimport { Row, Col, Menu, Dropdown, Image } from \"antd\";\r\nimport moment from \"moment\";\r\nimport Geocode from \"react-geocode\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { AuthContext } from \"../context/auth\";\r\nimport Pin from \"../assets/pin-svg-25px.svg\";\r\nimport LikeButton from \"./LikeButton\";\r\nimport CommentButton from \"./CommentButton\";\r\nimport RepostButton from \"./RepostButton\";\r\n\r\nimport { EllipsisOutlined } from \"@ant-design/icons\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { DELETE_POST, MUTE_POST } from \"../GraphQL/Mutations\";\r\nimport { PostContext } from \"../context/posts\";\r\n\r\nGeocode.setApiKey(\"AIzaSyBM6YuNkF6yev9s3XpkG4846oFRlvf2O1k\");\r\n\r\nGeocode.setLanguage(\"id\");\r\n\r\nexport default function PhotoGalerry({ post, loading }) {\r\n  const [address, setAddress] = useState(\"\");\r\n  const { user } = useContext(AuthContext);\r\n  const postContext = useContext(PostContext);\r\n\r\n  const [deletePost] = useMutation(DELETE_POST, {\r\n    update(_, { data: { deletePost } }) {\r\n      alert(deletePost);\r\n      postContext.deletePost(post.id);\r\n    },\r\n  });\r\n\r\n  const [mutePost] = useMutation(MUTE_POST, {\r\n    update(_, { data: { mutePost } }) {\r\n      postContext.mutePost(mutePost);\r\n    },\r\n  });\r\n\r\n  const userName = user && user.username;\r\n\r\n  useEffect(() => {\r\n    if (post.location) {\r\n      Geocode.fromLatLng(post.location.lat, post.location.lng).then(\r\n        (response) => {\r\n          const address = response.results[0].address_components[1].short_name;\r\n          setAddress(address);\r\n        },\r\n        (error) => {\r\n          console.error(error);\r\n        }\r\n      );\r\n    }\r\n  }, [post]);\r\n\r\n  return (\r\n    <List itemLayout=\"vertical\" size=\"large\">\r\n      <List.Item>\r\n                {post.media? (\r\n                  post.media.length == 1? (\r\n                    <Image\r\n                      style={{ width: \"100%\", borderRadius: 10, objectFit: \"cover\" }}\r\n                      src={post.media}\r\n                    />\r\n                  ) : null\r\n                ) : null}\r\n\r\n                {post.media? (\r\n                  post.media.length == 2? (\r\n                    <table className=\"row-card-2\">\r\n                      <Image.PreviewGroup>\r\n                      <td style={{width:\"50%\"}}>\r\n                      <Image\r\n                      style={{borderRadius: \"10px 0px 0px 10px\"}}\r\n                      src={post.media[0]}\r\n                    />\r\n                      </td>\r\n                    <td>\r\n                    <Image\r\n                      style={{borderRadius: \"0px 10px 10px 0px\"}}\r\n                      src={post.media[1]}\r\n                    />\r\n                    </td>\r\n                    </Image.PreviewGroup>\r\n                  </table>\r\n                  ) : null\r\n                ) : null}\r\n\r\n                {post.media? (\r\n                  post.media.length >= 3? (\r\n                    <table className=\"photo-grid-3\">\r\n                      <Image.PreviewGroup>\r\n                        <tbody>\r\n                          <tr style={{margin: 0, padding: 0}}>\r\n                            <td rowspan=\"2\" style={{width: \"50%\", verticalAlign: 'top' }}>\r\n                              <Image\r\n                                className=\"pict1-3\"\r\n                                style={{borderRadius: \"10px 0px 0px 10px\"}}\r\n                                src={post.media[0]}\r\n                              />\r\n                            </td>\r\n                            <td style={{width: \"50%\"}}>\r\n                              <Image\r\n                                className=\"pict2-3\"\r\n                                style={{borderRadius: \"0px 10px 0px 0px\"}}\r\n                                src={post.media[1]}\r\n                              />\r\n                              <div className=\"text-container\" style={{ marginTop: '-6px'}}>\r\n                                <Image\r\n                                  className=\"pict3-3\"\r\n                                  style={post.media.length > 3? {borderRadius: \"0px 0px 10px 0px\", filter: \"blur(2px)\" }: {borderRadius: \"0px 0px 10px 0px\" }}\r\n                                  src={post.media[2]}\r\n                                />\r\n                                <div className=\"text-center\">{post.media.length > 3? (\"+\" +(post.media.length - 3)) : null}</div>\r\n                              </div>\r\n                            </td>\r\n                          </tr>\r\n                          {post.media.length > 3? (\r\n                            <div>\r\n                              <Image\r\n                                className=\"pict3-3\"\r\n                                style={{display: \"none\"}}\r\n                                src={post.media[3]}\r\n                              />\r\n                              {post.media.length > 4?(\r\n                                <Image\r\n                                className=\"pict3-3\"\r\n                                style={{display: \"none\"}}\r\n                                src={post.media[4]}\r\n                              />\r\n                              ) : null}  \r\n                            </div>\r\n                            \r\n                          ) : null }\r\n                        </tbody>\r\n                      </Image.PreviewGroup>\r\n                    </table>\r\n                  ) : null\r\n                ) : null}\r\n\r\n          {post.media ? (\r\n          post.media.length >= 3 ? (\r\n            <table className=\"photo-grid-3\">\r\n              <tbody>\r\n                <tr>\r\n                  <td rowSpan=\"2\" style={{ width: \"50%\" }}>\r\n                    <img\r\n                      className=\"pict1-3\"\r\n                      src={post.media[0]}\r\n                      style={{ borderRadius: \"10px 0px 0px 10px\" }}\r\n                    />\r\n                  </td>\r\n                  <td style={{ width: \"50%\" }}>\r\n                    <img\r\n                      className=\"pict2-3\"\r\n                      src={post.media[1]}\r\n                      style={{ borderRadius: \"0px 10px 0px 0px\" }}\r\n                    />\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td style={{ width: \"50%\" }}>\r\n                    <div className=\"text-container\">\r\n                      <img\r\n                        className=\"pict3-3\"\r\n                        src={post.media[2]}\r\n                        style={\r\n                          post.media.length > 3\r\n                            ? {\r\n                                borderRadius: \"0px 0px 10px 0px\",\r\n                                filter: \"blur(2px)\",\r\n                              }\r\n                            : { borderRadius: \"0px 0px 10px 0px\" }\r\n                        }\r\n                      />\r\n                      <div className=\"text-center\">\r\n                        {post.media.length > 3\r\n                          ? \"+\" + (post.media.length - 3)\r\n                          : null}\r\n                      </div>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          ) : null\r\n          ) : null}\r\n      </List.Item>\r\n    </List>\r\n  );\r\n}\r\n",["303","304"],"C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\components\\PostNavBar.jsx",["305","306","307","308","309","310","311"],"import { Button, Radio, Tabs } from 'antd';\r\nimport { ArrowLeftOutlined } from \"@ant-design/icons\";\r\nimport React, { useContext, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport { StickyContainer, Sticky } from 'react-sticky';\r\n// Semantic\r\nimport { Menu } from 'semantic-ui-react'\r\n\r\nimport '../App.css'\r\n\r\n\r\nexport default function PostNavBar() {\r\nconst [nav, setNav] = useState({value2: \"Latest\"})\r\n//back button\r\nlet history = useHistory();\r\n\r\n\r\n\r\nconst onChange2 = e => {\r\n    setNav({\r\n        value2: e.target.value,\r\n    });\r\n  };\r\n\r\nconst { value2 } = nav;\r\n\r\n    return (\r\n      <StickyContainer>\r\n        <Menu pointing secondary size='massive'>\r\n          <div style={{display: \"inline-block\",marginLeft: 20, padding: \"10px 0\"}} onClick={() => history.goBack()}>\r\n          <ArrowLeftOutlined />\r\n          </div>\r\n          <p style={{padding: \"10px 0\",marginLeft: 20, fontWeight: 'bolder',}}>Post</p>\r\n        </Menu>\r\n      </StickyContainer>\r\n        )\r\n}","C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\components\\LoginGoogleButton.jsx",[],"C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\pages\\registerGoogle.jsx",["312","313","314"],"import React, { useContext, useState } from 'react';\r\nimport {\r\n    Form,\r\n    Input,\r\n    Tooltip,\r\n    Cascader,\r\n    Select,\r\n    Checkbox,\r\n    Button,\r\n    DatePicker,\r\n    Alert\r\n} from 'antd';\r\nimport { QuestionCircleOutlined } from '@ant-design/icons';\r\nimport { useMutation } from '@apollo/client'\r\nimport { REGISTER_USER_GOOGLE } from '../GraphQL/Mutations'\r\n\r\nimport { AuthContext } from '../context/auth'\r\n\r\n\r\nconst { Option } = Select;\r\nconst gender = [\r\n    {\r\n        value: 'male',\r\n        label: 'male',\r\n    },\r\n    {\r\n        value: 'female',\r\n        label: 'female',\r\n    },\r\n    {\r\n        value: 'other',\r\n        label: 'other',\r\n    },\r\n];\r\nconst formItemLayout = {\r\n    labelCol: {\r\n        xs: {\r\n            span: 24,\r\n        },\r\n        sm: {\r\n            span: 8,\r\n        },\r\n    },\r\n    wrapperCol: {\r\n        xs: {\r\n            span: 24,\r\n        },\r\n        sm: {\r\n            span: 16,\r\n        },\r\n    },\r\n};\r\nconst tailFormItemLayout = {\r\n    wrapperCol: {\r\n        xs: {\r\n            span: 24,\r\n            offset: 0,\r\n        },\r\n        sm: {\r\n            span: 16,\r\n            offset: 8,\r\n        },\r\n    },\r\n};\r\n\r\nconst RegisterGoogle = (props) => {\r\n    const context = useContext(AuthContext)\r\n    const [form] = Form.useForm();\r\n    const [errors, setErrors] = useState({});\r\n    console.log(context.googleData);\r\n\r\n    const [registerUserGoogle] = useMutation(REGISTER_USER_GOOGLE, {\r\n        update(_, { data: { registerUserWithGoogle: userData } }){\r\n            context.login(userData.token)\r\n            props.history.push('/')\r\n        },\r\n        onError(err) {\r\n            console.log(err.message);\r\n            setErrors(err.message)\r\n        }\r\n    })\r\n\r\n    const onFinish = (values) => {\r\n        const { birthday, gender, phone, phoneCode } = values\r\n        const { email, username, imageUrl, token, id } = context.googleData\r\n        registerUserGoogle({ variables: { gender: gender[0], birthday: birthday._d, mobileNumber: `${phoneCode + phone}`, username, email, imageUrl, token, id } })\r\n        console.log(context.googleData, values);\r\n    };\r\n    const onCloseErr = (e) => {\r\n        console.log(e, 'I was closed.');\r\n    };\r\n    const phoneCode = (\r\n        <Form.Item name=\"phoneCode\" noStyle>\r\n            <Select\r\n                style={{\r\n                    width: 70,\r\n                }}\r\n            >\r\n                <Option value=\"+62\">+62</Option>\r\n                <Option value=\"+87\">+87</Option>\r\n            </Select>\r\n        </Form.Item>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <div className=\"curious\" style={{ display: \"block\", marginLeft: \"auto\", marginRight: \"auto\", backgroundRepeat: 'no-repeat' }} />\r\n                <div class=\"ui card container\" style={{ width: 447, marginTop: 30, paddingTop: 30, padding: 30 }}>\r\n                    <div class=\"content\">\r\n\r\n                        <Form\r\n                            form={form}\r\n                            name=\"register\"\r\n                            onFinish={onFinish}\r\n                            initialValues={{\r\n                                residence: ['zhejiang', 'hangzhou', 'xihu'],\r\n                                prefix: '86',\r\n                            }}\r\n                            scrollToFirstError\r\n                        >\r\n            <h3>Hello, {context.googleData.username}</h3>\r\n            <p>isi data data di bawah untuk menyelesaikan pendaftaran anda</p>\r\n\r\n            <Form.Item\r\n                name=\"gender\"\r\n                label=\"chose gender\"\r\n                rules={[\r\n                    {\r\n                        type: 'array',\r\n                        required: true,\r\n                        message: 'Please select your gender!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Cascader options={gender} />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                name=\"phone\"\r\n                label=\"Phone Number\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input your phone number!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input\r\n                    addonBefore={phoneCode}\r\n                    style={{\r\n                        width: '100%',\r\n                    }}\r\n                />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                label=\"birthday\"\r\n                name=\"birthday\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input your birthday!',\r\n                    },\r\n                ]}\r\n            >\r\n                <DatePicker />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                name=\"agreement\"\r\n                valuePropName=\"checked\"\r\n                rules={[\r\n                    {\r\n                        validator: (_, value) =>\r\n                            value ? Promise.resolve() : Promise.reject('Should accept agreement'),\r\n                    },\r\n                ]}\r\n                {...tailFormItemLayout}\r\n            >\r\n                <Checkbox>\r\n                    I have read the agreement\r\n                </Checkbox>\r\n            </Form.Item>\r\n            <Form.Item {...tailFormItemLayout}>\r\n                <Button type=\"primary\" htmlType=\"submit\" style={{backgroundColor: \"#7f57ff\", borderRadius: 10}}>\r\n                    Register\r\n        </Button>\r\n            </Form.Item>\r\n            {Object.keys(errors).length > 0 && (\r\n                <Alert\r\n                    message={errors}\r\n                    type=\"error\"\r\n                    closable\r\n                    onClose={onCloseErr}\r\n                />\r\n            )}\r\n                        </Form>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RegisterGoogle\r\n","C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\util\\GoogleAuthRoute.jsx",[],"C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\pages\\resetPassword.jsx",["315","316"],"import React, { useState, useContext, useEffect } from 'react'\r\nimport { Form, Input, Alert } from 'antd';\r\n\r\nimport { useMutation } from '@apollo/client'\r\nimport { LOGIN_USER } from '../GraphQL/Mutations'\r\n\r\nimport { AuthContext } from '../context/auth'\r\nimport { Link } from 'react-router-dom';\r\nimport { auth } from '../util/Firebase';\r\n\r\nconst layout = {\r\n    labelCol: {\r\n        span: 8,\r\n    },\r\n    wrapperCol: {\r\n        span: 16,\r\n    },\r\n};\r\n\r\nexport default function ReserPassword(props) {\r\n    const context = useContext(AuthContext)\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const [login] = useMutation(LOGIN_USER, {\r\n        update(_, { data: { login } }) {\r\n            \r\n            context.login(login)\r\n            props.history.push('/')\r\n        },\r\n        onError(err) {\r\n            setErrors(err.message)\r\n        }\r\n    })\r\n\r\n    const onFinish = (values) => {\r\n        const { email } = values\r\n\r\n        auth.sendPasswordResetEmail(email).then(\r\n            console.log(\"email sent@\")\r\n        )\r\n        .catch(error => {\r\n            console.log(error)\r\n        })\r\n    };\r\n\r\n    const onCloseErr = (e) => {\r\n        console.log(e, 'I was closed.');\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/'>\r\n            <div className=\"curious\" style={{ marginLeft: 710, marginTop: 100 }} />\r\n            </Link>\r\n            <div className=\"ui card container\" style={{ width: 447, marginTop: 30, paddingTop: 30, padding: 30 }}>\r\n                <div className=\"content\">\r\n                    <h1>Reset Password</h1>\r\n                    <Form\r\n                        {...layout}\r\n                        name=\"basic\"\r\n                        initialValues={{\r\n                            remember: true,\r\n                        }}\r\n                        onFinish={onFinish}\r\n                    >\r\n                        <Form.Item\r\n                            name=\"email\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Please input your email!',\r\n                                },\r\n                            ]}\r\n                            style={{ width: 539 }}\r\n                        >\r\n                            <Input placeholder=\"Email / Username\" />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item>\r\n                            <button className=\"ui facebook button\" type=\"submit\" style={{ backgroundColor: '#7F57FF', width: 359, height: 40 }}>\r\n                                Send Verification Email\r\n                            </button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n            {Object.keys(errors).length > 0 && (\r\n                <Alert\r\n                    message={errors}\r\n                    type=\"error\"\r\n                    closable\r\n                    onClose={onCloseErr}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\n","C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\components\\AddPost\\index.jsx",["317","318","319","320","321","322"],"// Modules\r\nimport React, { useState, useEffect, useContext } from \"react\";\r\nimport { useMutation, useLazyQuery } from '@apollo/client';\r\nimport { Modal, Button, Form, Input, Col, Upload, Card, Skeleton, Space } from \"antd\";\r\nimport { PlusOutlined, PictureOutlined } from '@ant-design/icons';\r\nimport moment from 'moment';\r\nimport { get } from 'lodash';\r\n\r\n// Styles\r\nimport \"../../App.css\";\r\n\r\n// Context\r\nimport { PostContext } from \"../../context/posts\";\r\n\r\n// Query\r\nimport { CREATE_POST, GET_POST } from '../../GraphQL/Queries';\r\n\r\n// Init Firebase\r\nimport firebase from 'firebase/app'\r\nimport 'firebase/storage'\r\nconst  storage = firebase.storage()\r\n\r\nconst InitialState = {\r\n  previewVisible: false,\r\n  confirmLoading: false,\r\n  visible: false,\r\n  previewImage: '',\r\n  previewTitle: '',\r\n  fileList:[],\r\n  lat: '',\r\n  lng: '',\r\n  uploaded:[],\r\n  isFinishUpload: false,\r\n  text: ''\r\n};\r\n\r\nconst UploadButton = () => (\r\n  <div>\r\n    <PlusOutlined />\r\n    <div style={{ marginTop: 8 }}>Upload</div>\r\n  </div>\r\n);\r\n\r\nexport default function ModalPost() {\r\n  // Context\r\n  const {\r\n    isOpenNewPost,\r\n    repost = '',\r\n    toggleOpenNewPost,\r\n    createPost: updatePosts\r\n  } = useContext(PostContext);\r\n\r\n  // Local State\r\n  const [state, setState] = useState(InitialState);\r\n  const [form] = Form.useForm();\r\n\r\n  // Query\r\n  const [getRepost, { data: dataRepost, loading }] = useLazyQuery(GET_POST);\r\n  const getPost = get(dataRepost, 'getPost') || {};\r\n  \r\n  const [createPost] = useMutation(\r\n    CREATE_POST,\r\n    {\r\n      onCompleted: (data) => {\r\n        const { createPost } = data;\r\n        \r\n        // Reset Form\r\n        setState(InitialState);\r\n        form.resetFields();\r\n\r\n        // Update Redux\r\n        toggleOpenNewPost(false)\r\n        updatePosts({\r\n          ...createPost,\r\n          repost: getPost\r\n        });\r\n      }\r\n    }\r\n  )\r\n\r\n  const { isFinishUpload, previewVisible, previewImage, fileList, previewTitle, lat, lng, uploaded} = state;\r\n\r\n  ///////// location /////////\r\n  function showPosition(position) {\r\n    setState({\r\n      ...state,\r\n      lat: position.coords.latitude,\r\n      lng: position.coords.longitude\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    navigator.geolocation.getCurrentPosition(showPosition)\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (repost) {\r\n      getRepost({ variables: { id: repost }});\r\n    }\r\n  }, [repost]);\r\n\r\n  useEffect(() => {\r\n    if (isOpenNewPost && !!uploaded.length || (state.text && !uploaded.length && isFinishUpload)) {\r\n      const { text= '' } = state;\r\n      const variables = {\r\n        text,\r\n        media: uploaded,\r\n        location: {\r\n          lat,\r\n          lng\r\n        },\r\n        repost: repost || ''\r\n      };\r\n\r\n      createPost( { variables });\r\n    }\r\n  }, [uploaded, isFinishUpload]);\r\n\r\n  //////////////////// Upload Photo Function Start//////////////////////////////////\r\n\r\n  function getBase64(file) {\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => resolve(reader.result);\r\n      reader.onerror = error => reject(error);\r\n    });\r\n  }\r\n\r\n  const handleCancel = () => setState({...state, previewVisible: false });\r\n\r\n  const handleCancelModal = () => {\r\n    toggleOpenNewPost(false);\r\n  };\r\n\r\n  const handlePreview = async file => {\r\n    if (!file.url && !file.preview) {\r\n      file.preview = await getBase64(file.originFileObj);\r\n    }\r\n\r\n    setState({\r\n      ...state,\r\n      previewImage: file.url || file.preview,\r\n      previewVisible: true,\r\n      previewTitle: file.name || file.url.substring(file.url.lastIndexOf('/') + 1),\r\n    });\r\n  };\r\n\r\n  const handleChange = ({ fileList }) => {\r\n    const newFiles = fileList.map(file => ({ ...file, status: 'done'}))\r\n    setState({\r\n      ...state, \r\n      fileList: newFiles\r\n    });\r\n  }\r\n\r\n\r\n  //////////////////// Upload Photo Function Finish/////////////////////////////////\r\n\r\n  const onFinish = async (value) => {\r\n    let uploaded = [];\r\n    ////////////////fungsi upload///////////////////\r\n    if (fileList.length) {\r\n      uploaded = await Promise.all(fileList.map(async (elem) => {\r\n        const uploadTask = storage.ref(`images/${elem.originFileObj.name}`).put(elem.originFileObj)\r\n  \r\n        const url = await new Promise((resolve, reject) => {\r\n          uploadTask.on('state_changed',\r\n            () => {},\r\n            error => {\r\n              fileList.push({ ...elem, status: 'error' })\r\n              reject()\r\n            },\r\n            async () => {\r\n              const downloadUrl = await uploadTask.snapshot.ref.getDownloadURL();\r\n  \r\n              resolve(downloadUrl);\r\n            }\r\n          )\r\n        })\r\n  \r\n        return url\r\n      }));\r\n\r\n      setState({ ...state, uploaded, fileList, isFinishUpload: true, text: value.text });\r\n\r\n      return;\r\n    }\r\n\r\n\r\n    setState({ ...state, uploaded: [], isFinishUpload: true, text: value.text})\r\n    \r\n    return;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        key=\"addPost\"\r\n          visible={isOpenNewPost}\r\n          title={[\r\n            <p key=\"paragraf\">{repost ? 'Repost' : 'Post to'}</p>,\r\n            <div key=\"location\" style={{ position: \"absolute\", marginTop: 15, marginLeft: 60, width: 150 }}>\r\n              <h3 style={{ fontWeight: \"bold\" }}>Nearby</h3>\r\n              <a style={{ fontSize: 12 }}>Wild Park, Melbourne</a>\r\n            </div>,\r\n            <div key=\"location2\"style={{ width: 45 }}>\r\n              <a href=\"/\"><p className=\"location\" style={{ marginTop: 10 }} /></a>\r\n            </div>\r\n          ]}\r\n          onCancel={handleCancelModal}\r\n          footer={null}\r\n        >\r\n          {!!repost && (\r\n            <>\r\n             {loading ?\r\n              (\r\n                <div style={{ marginBottom: 10 }}>\r\n                  <Space>\r\n                    <Skeleton.Avatar active={true} size={\"large\"}/>\r\n                    <Skeleton.Button style={{ width: window.isMobile ? '200px' : '400px'}} size={\"small\"} />\r\n                  </Space>\r\n                  <Skeleton.Button style={{ width: window.isMobile ? '250px' : '450px', marginTop: 10}} size={\"small\"} />\r\n                </div>\r\n              )\r\n             : (\r\n              <Card bodyStyle={{ padding: '10px 12px' }} style={{ width: '100%', height: '100%', borderRadius: 10, backgroundColor: '#f5f5f5', borderColor: '#ededed', padding: 0, marginBottom: 12 }}>\r\n                <div style={{ display: 'flex'}}>\r\n                  <p className=\"ic-location-small\" style={{ margin: 0}}/>\r\n                  <div style={{ fontWeight: 600, paddingLeft: 10 }}>Jakarta, Indonesia</div>\r\n                </div>\r\n                <span style={{ fontSize: 12 }}>{moment(getPost.createdAt).fromNow()}</span>\r\n                <div style={{ marginTop: 5 }}>{getPost.text}</div>\r\n              </Card>\r\n             )}\r\n            </>\r\n          )}\r\n        <Form form={form} name=\"nest-messages\" onFinish={onFinish}>\r\n          <Form.Item name=\"text\"  >\r\n            <Input.TextArea bordered={false} placeholder=\"What's your story\" />\r\n          </Form.Item>\r\n          {fileList.length > 0 && (\r\n            <Form.Item name=\"foto\" style={{ marginBottom: 0 }} > \r\n              <Upload\r\n                action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n                listType=\"picture-card\"\r\n                fileList={fileList}\r\n                accept=\"video/*, image/*\"\r\n                onPreview={handlePreview}\r\n                onChange={handleChange}\r\n              >\r\n                {fileList.length >= 5 ? null : <UploadButton />}\r\n              </Upload>\r\n            </Form.Item>\r\n          )}\r\n          <div style={{ position: 'relative', width: '100%'}}>\r\n            {/* <Divider /> */}\r\n            <hr style={{\r\n              border: 'none',\r\n              borderTop: '1px solid #d9d9d9',\r\n              height: '0.2px'\r\n            }} />\r\n            <Col span={12}>\r\n              <Form.Item name=\"foto\" style={{marginBottom: 0}}> \r\n                <Upload\r\n                accept=\"video/*, image/*\"\r\n                action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n                showUploadList={null}\r\n                onChange={handleChange}\r\n                >\r\n                  <PictureOutlined />\r\n                </Upload>\r\n              </Form.Item>\r\n              </Col>\r\n            <Button htmlType=\"submit\" key=\"submit\" type=\"primary\" \r\n              style={{ backgroundColor: '#7958f5', borderRadius: 20, position:\"absolute\",  bottom:\"3%\", right: 0, height:25, fontSize: 10}}>\r\n              Post\r\n            </Button>\r\n          </div>\r\n         \r\n          </Form>\r\n          <Modal\r\n            visible={previewVisible}\r\n            title={previewTitle}\r\n            footer={null}\r\n            onCancel={handleCancel}\r\n          >\r\n            <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\r\n          </Modal>\r\n        </Modal>\r\n        \r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\pages\\subscribePosts.jsx",["323","324"],"import React, { useContext, useEffect, useRef } from 'react'\r\n\r\nimport { useQuery } from '@apollo/client'\r\nimport { GET_SUBSCRIBED_POSTS } from '../GraphQL/Queries'\r\nimport { PostContext } from '../context/posts'\r\n\r\nimport InfiniteScroll from '../components/InfiniteScroll'\r\nimport PostCard from '../components/PostCard'\r\nimport { AuthContext } from '../context/auth'\r\nimport NavBar from '../components/NavBar'\r\n\r\n\r\nfunction SubscribePosts() {\r\n    const { data } = useQuery(GET_SUBSCRIBED_POSTS);\r\n\r\n    const _isMounted = useRef(false);\r\n    const { subscribePosts, setSubscribePosts, loadingData, loading } = useContext(PostContext)\r\n    const { user } = useContext(AuthContext)\r\n\r\n    useEffect(() => {\r\n        if (!_isMounted.current && data) { // check if doesn't fetch data\r\n            if (!data) {\r\n                loadingData();\r\n\r\n                return;\r\n            }\r\n\r\n            setSubscribePosts(data.getSubscribePosts)\r\n            \r\n            // set did mount react\r\n            _isMounted.current = true;\r\n\r\n            return;\r\n        }\r\n    }, [data, _isMounted])\r\n\r\n    return (\r\n        <div>\r\n            <NavBar />\r\n            {user ? (<div>\r\n                {!subscribePosts ? null\r\n                    : subscribePosts.map((post, key) => post === null ? (null) : (\r\n                        <div key={`posts${post.id} ${key}`}>\r\n                            {console.log(post)}\r\n                        <PostCard post={post} loading={loading} />\r\n                    </div>\r\n                ))}\r\n            </div>) : null}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SubscribePosts","C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\components\\AddPost\\ButtonAdd.jsx",[],"C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\components\\BottomBar\\index.jsx",[],"C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\components\\Buttons\\RepostButton\\index.jsx",[],"C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\components\\Buttons\\LikeButton\\index.jsx",["325"],"import React, { useContext, useEffect } from \"react\";\r\nimport { HeartOutlined } from \"@ant-design/icons\";\r\nimport { Button } from \"antd\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { LIKE_POST } from \"../../../GraphQL/Mutations\";\r\nimport { PostContext } from \"../../../context/posts\";\r\nimport { AuthContext } from \"../../../context/auth\";\r\n\r\nexport default function LikeButton({ likeCount, id, likes }) {\r\n  const { like } = useContext(PostContext);\r\n  const { user } = useContext(AuthContext);\r\n\r\n  const [likePost] = useMutation(LIKE_POST, {\r\n    update(_, { data: { likePost } }) {\r\n      like(likePost, id);\r\n    },\r\n  });\r\n\r\n  const onLike = () => {\r\n    likePost({ variables: { id } });\r\n  };\r\n\r\n  return (\r\n    <div className=\"ui labeled\" tabIndex=\"0\">\r\n      <div style={{ marginLeft: 35, marginRight: 5 }}>\r\n        <div\r\n          className=\"ui basic label float\"\r\n          style={{\r\n            height: 25,\r\n            borderRadius: 5,\r\n            top: -3,\r\n            border: \"1px black solid\",\r\n            marginLeft: -10,\r\n            marginRight: -20,\r\n            position: \"relative\",\r\n            backgroundColor: \"white\",\r\n            width: 70\r\n          }}\r\n        >\r\n          <p style={{ marginTop: -4, marginLeft: 5 }}>{likeCount} likes</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ position: \"absolute\", marginTop: -32 }}>\r\n        <Button\r\n          onClick={onLike}\r\n          shape=\"circle\"\r\n          className=\"likeButton\"\r\n          icon={\r\n            // <HeartOutlined />\r\n            user && likes.find((like) => like.owner === user.username) ? (\r\n              <HeartOutlined style={{ color: \"red\" }} />\r\n            ) : (\r\n              <HeartOutlined />\r\n            )\r\n          }\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\components\\Buttons\\CommentButton\\index.jsx",[],"C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\pages\\popular.jsx",["326","327"],"import React, { useContext, useEffect, useRef } from 'react'\r\n\r\nimport { useLazyQuery } from '@apollo/client'\r\nimport { GET_POPULAR_POSTS } from '../GraphQL/Queries'\r\nimport { PostContext } from '../context/posts'\r\n\r\nimport InfiniteScroll from '../components/InfiniteScroll'\r\nimport PostCard from '../components/PostCard'\r\nimport { AuthContext } from '../context/auth'\r\nimport NavBar from '../components/NavBar'\r\n\r\nimport { getSession } from '../util/Session';\r\n\r\n\r\nfunction Popular() {\r\n    const _isMounted = useRef(false);\r\n    const { posts, setPosts, loadingData, loading } = useContext(PostContext)\r\n    const { user } = useContext(AuthContext)\r\n\r\n    const { location } = getSession();\r\n    const [ getPosts, { data, loading: loadingPosts }] = useLazyQuery(GET_POPULAR_POSTS);\r\n    \r\n    useEffect(() => {\r\n        if (Object.keys(location).length) {\r\n            const loc = JSON.parse(location);\r\n\r\n            getPosts({ variables: loc });\r\n        }\r\n    }, [location]);\r\n\r\n    useEffect(() => {\r\n        if (!_isMounted.current && data) { // check if doesn't fetch data\r\n            if (!data) {\r\n                loadingData();\r\n\r\n                return;\r\n            }\r\n            console.log(data.getPopularPosts);\r\n            setPosts(data.getPopularPosts)\r\n            \r\n            // set did mount react\r\n            _isMounted.current = true;\r\n\r\n            return;\r\n        }\r\n    }, [data, _isMounted])\r\n\r\n    return (\r\n        <div>\r\n            <NavBar />\r\n            {user ? (<InfiniteScroll isLoading={loadingPosts}>\r\n                {!posts ? null\r\n                    : posts.map((post, key) => {\r\n                        const { muted, id } = post;\r\n                        const isMuted = user && muted && muted.find((mute) => mute.owner === user.username)\r\n                        \r\n                        return (\r\n                            <div key={`posts${id} ${key}`}>\r\n                                {!isMuted && <PostCard post={post} loading={loading} />}\r\n                            </div>\r\n                        )\r\n                    })}\r\n            </InfiniteScroll>) : null}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Popular","C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\components\\SkeletonLoading.jsx",["328"],"import { Space, Skeleton } from 'antd'\r\nimport React from 'react'\r\n\r\nexport default function SkeletonLoading() {\r\n\r\n  return(\r\n    <div style={{ width: window.isMobile ? '200px' : '500px'}}>\r\n    <Skeleton avatar paragraph={{ rows: 2 }} />\r\n    <Skeleton avatar paragraph={{ rows: 2 }} />\r\n    <Skeleton avatar paragraph={{ rows: 2 }} />\r\n    <Skeleton avatar paragraph={{ rows: 2 }} />\r\n    </div>\r\n  )\r\n\r\n\r\n}","C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\pages\\map\\index.jsx",["329"],"C:\\Users\\Albert\\Documents\\Web Dev\\project-curious\\frontend\\src\\util\\ConfigMap.jsx",[],{"ruleId":"330","severity":1,"message":"331","line":28,"column":11,"nodeType":"332","messageId":"333","endLine":29,"endColumn":40},{"ruleId":"334","replacedBy":"335"},{"ruleId":"336","replacedBy":"337"},{"ruleId":"338","severity":1,"message":"339","line":1,"column":17,"nodeType":"340","messageId":"341","endLine":1,"endColumn":27},{"ruleId":"338","severity":1,"message":"339","line":1,"column":17,"nodeType":"340","messageId":"341","endLine":1,"endColumn":27},{"ruleId":"338","severity":1,"message":"342","line":1,"column":39,"nodeType":"340","messageId":"341","endLine":1,"endColumn":48},{"ruleId":"338","severity":1,"message":"343","line":28,"column":19,"nodeType":"340","messageId":"341","endLine":28,"endColumn":24},{"ruleId":"344","severity":1,"message":"345","line":52,"column":98,"nodeType":"346","messageId":"347","endLine":52,"endColumn":100},{"ruleId":"348","severity":1,"message":"349","line":109,"column":63,"nodeType":"350","messageId":"351","endLine":109,"endColumn":65},{"ruleId":"348","severity":1,"message":"349","line":110,"column":62,"nodeType":"350","messageId":"351","endLine":110,"endColumn":64},{"ruleId":"348","severity":1,"message":"352","line":111,"column":57,"nodeType":"350","messageId":"351","endLine":111,"endColumn":59},{"ruleId":"348","severity":1,"message":"352","line":111,"column":69,"nodeType":"350","messageId":"351","endLine":111,"endColumn":71},{"ruleId":"353","severity":1,"message":"354","line":114,"column":37,"nodeType":"355","endLine":121,"endColumn":39},{"ruleId":"356","severity":1,"message":"357","line":154,"column":21,"nodeType":"355","endLine":161,"endColumn":23},{"ruleId":"356","severity":1,"message":"357","line":170,"column":34,"nodeType":"355","endLine":170,"endColumn":85},{"ruleId":"338","severity":1,"message":"342","line":1,"column":22,"nodeType":"340","messageId":"341","endLine":1,"endColumn":31},{"ruleId":"338","severity":1,"message":"358","line":42,"column":7,"nodeType":"340","messageId":"341","endLine":42,"endColumn":15},{"ruleId":"359","severity":1,"message":"360","line":62,"column":6,"nodeType":"361","endLine":62,"endColumn":10,"suggestions":"362"},{"ruleId":"359","severity":1,"message":"363","line":91,"column":6,"nodeType":"361","endLine":91,"endColumn":24,"suggestions":"364"},{"ruleId":"356","severity":1,"message":"357","line":139,"column":21,"nodeType":"355","endLine":139,"endColumn":80},{"ruleId":"365","severity":1,"message":"366","line":156,"column":23,"nodeType":"355","endLine":159,"endColumn":24},{"ruleId":"348","severity":1,"message":"349","line":172,"column":46,"nodeType":"350","messageId":"351","endLine":172,"endColumn":48},{"ruleId":"365","severity":1,"message":"366","line":218,"column":25,"nodeType":"355","endLine":221,"endColumn":26},{"ruleId":"338","severity":1,"message":"367","line":9,"column":11,"nodeType":"340","messageId":"341","endLine":9,"endColumn":22},{"ruleId":"338","severity":1,"message":"368","line":1,"column":32,"nodeType":"340","messageId":"341","endLine":1,"endColumn":39},{"ruleId":"369","severity":1,"message":"370","line":104,"column":3,"nodeType":"371","messageId":"372","endLine":117,"endColumn":4},{"ruleId":"359","severity":1,"message":"373","line":154,"column":6,"nodeType":"361","endLine":154,"endColumn":13,"suggestions":"374"},{"ruleId":"359","severity":1,"message":"375","line":183,"column":6,"nodeType":"361","endLine":183,"endColumn":21,"suggestions":"376"},{"ruleId":"359","severity":1,"message":"377","line":249,"column":5,"nodeType":"361","endLine":249,"endColumn":12,"suggestions":"378"},{"ruleId":"338","severity":1,"message":"379","line":3,"column":24,"nodeType":"340","messageId":"341","endLine":3,"endColumn":32},{"ruleId":"359","severity":1,"message":"380","line":31,"column":8,"nodeType":"361","endLine":31,"endColumn":18,"suggestions":"381"},{"ruleId":"359","severity":1,"message":"382","line":48,"column":8,"nodeType":"361","endLine":48,"endColumn":26,"suggestions":"383"},{"ruleId":"384","severity":1,"message":"385","line":1,"column":1,"nodeType":"386","endLine":110,"endColumn":2},{"ruleId":"338","severity":1,"message":"387","line":7,"column":10,"nodeType":"340","messageId":"341","endLine":7,"endColumn":29},{"ruleId":"338","severity":1,"message":"388","line":2,"column":16,"nodeType":"340","messageId":"341","endLine":2,"endColumn":22},{"ruleId":"365","severity":1,"message":"389","line":24,"column":13,"nodeType":"355","endLine":24,"endColumn":25},{"ruleId":"330","severity":1,"message":"331","line":45,"column":17,"nodeType":"332","messageId":"333","endLine":46,"endColumn":25},{"ruleId":"356","severity":1,"message":"357","line":100,"column":17,"nodeType":"355","endLine":100,"endColumn":71},{"ruleId":"359","severity":1,"message":"390","line":83,"column":6,"nodeType":"361","endLine":83,"endColumn":22,"suggestions":"391"},{"ruleId":"356","severity":1,"message":"357","line":121,"column":21,"nodeType":"355","endLine":121,"endColumn":75},{"ruleId":"348","severity":1,"message":"349","line":124,"column":29,"nodeType":"350","messageId":"351","endLine":124,"endColumn":31},{"ruleId":"365","severity":1,"message":"366","line":176,"column":21,"nodeType":"355","endLine":179,"endColumn":22},{"ruleId":"348","severity":1,"message":"349","line":216,"column":35,"nodeType":"350","messageId":"351","endLine":216,"endColumn":37},{"ruleId":"392","severity":1,"message":"393","line":218,"column":97,"nodeType":"394","messageId":"351","endLine":218,"endColumn":106},{"ruleId":"348","severity":1,"message":"349","line":228,"column":29,"nodeType":"350","messageId":"351","endLine":228,"endColumn":31},{"ruleId":"348","severity":1,"message":"349","line":237,"column":29,"nodeType":"350","messageId":"351","endLine":237,"endColumn":31},{"ruleId":"356","severity":1,"message":"357","line":335,"column":21,"nodeType":"355","endLine":339,"endColumn":23},{"ruleId":"356","severity":1,"message":"357","line":342,"column":21,"nodeType":"355","endLine":346,"endColumn":23},{"ruleId":"356","severity":1,"message":"357","line":352,"column":23,"nodeType":"355","endLine":363,"endColumn":25},{"ruleId":"338","severity":1,"message":"388","line":1,"column":10,"nodeType":"340","messageId":"341","endLine":1,"endColumn":16},{"ruleId":"338","severity":1,"message":"395","line":1,"column":25,"nodeType":"340","messageId":"341","endLine":1,"endColumn":29},{"ruleId":"338","severity":1,"message":"339","line":2,"column":17,"nodeType":"340","messageId":"341","endLine":2,"endColumn":27},{"ruleId":"338","severity":1,"message":"396","line":5,"column":27,"nodeType":"340","messageId":"341","endLine":5,"endColumn":33},{"ruleId":"348","severity":1,"message":"349","line":14,"column":47,"nodeType":"350","messageId":"351","endLine":14,"endColumn":49},{"ruleId":"348","severity":1,"message":"349","line":26,"column":37,"nodeType":"350","messageId":"351","endLine":26,"endColumn":39},{"ruleId":"338","severity":1,"message":"397","line":4,"column":27,"nodeType":"340","messageId":"341","endLine":4,"endColumn":36},{"ruleId":"338","severity":1,"message":"398","line":7,"column":8,"nodeType":"340","messageId":"341","endLine":7,"endColumn":22},{"ruleId":"359","severity":1,"message":"399","line":35,"column":8,"nodeType":"361","endLine":35,"endColumn":26,"suggestions":"400"},{"ruleId":"338","severity":1,"message":"401","line":3,"column":10,"nodeType":"340","messageId":"341","endLine":3,"endColumn":13},{"ruleId":"338","severity":1,"message":"402","line":3,"column":15,"nodeType":"340","messageId":"341","endLine":3,"endColumn":18},{"ruleId":"338","severity":1,"message":"403","line":3,"column":20,"nodeType":"340","messageId":"341","endLine":3,"endColumn":24},{"ruleId":"338","severity":1,"message":"404","line":3,"column":26,"nodeType":"340","messageId":"341","endLine":3,"endColumn":34},{"ruleId":"338","severity":1,"message":"405","line":4,"column":8,"nodeType":"340","messageId":"341","endLine":4,"endColumn":14},{"ruleId":"338","severity":1,"message":"406","line":6,"column":10,"nodeType":"340","messageId":"341","endLine":6,"endColumn":14},{"ruleId":"338","severity":1,"message":"407","line":9,"column":8,"nodeType":"340","messageId":"341","endLine":9,"endColumn":11},{"ruleId":"338","severity":1,"message":"408","line":10,"column":8,"nodeType":"340","messageId":"341","endLine":10,"endColumn":18},{"ruleId":"338","severity":1,"message":"409","line":11,"column":8,"nodeType":"340","messageId":"341","endLine":11,"endColumn":21},{"ruleId":"338","severity":1,"message":"410","line":12,"column":8,"nodeType":"340","messageId":"341","endLine":12,"endColumn":20},{"ruleId":"338","severity":1,"message":"411","line":14,"column":10,"nodeType":"340","messageId":"341","endLine":14,"endColumn":26},{"ruleId":"338","severity":1,"message":"412","line":24,"column":10,"nodeType":"340","messageId":"341","endLine":24,"endColumn":17},{"ruleId":"338","severity":1,"message":"413","line":28,"column":10,"nodeType":"340","messageId":"341","endLine":28,"endColumn":20},{"ruleId":"338","severity":1,"message":"414","line":35,"column":10,"nodeType":"340","messageId":"341","endLine":35,"endColumn":18},{"ruleId":"338","severity":1,"message":"415","line":41,"column":9,"nodeType":"340","messageId":"341","endLine":41,"endColumn":17},{"ruleId":"348","severity":1,"message":"349","line":61,"column":37,"nodeType":"350","messageId":"351","endLine":61,"endColumn":39},{"ruleId":"348","severity":1,"message":"349","line":70,"column":37,"nodeType":"350","messageId":"351","endLine":70,"endColumn":39},{"ruleId":"356","severity":1,"message":"357","line":148,"column":21,"nodeType":"355","endLine":152,"endColumn":23},{"ruleId":"356","severity":1,"message":"357","line":155,"column":21,"nodeType":"355","endLine":159,"endColumn":23},{"ruleId":"356","severity":1,"message":"357","line":165,"column":23,"nodeType":"355","endLine":176,"endColumn":25},{"ruleId":"334","replacedBy":"416"},{"ruleId":"336","replacedBy":"417"},{"ruleId":"338","severity":1,"message":"388","line":1,"column":10,"nodeType":"340","messageId":"341","endLine":1,"endColumn":16},{"ruleId":"338","severity":1,"message":"418","line":1,"column":18,"nodeType":"340","messageId":"341","endLine":1,"endColumn":23},{"ruleId":"338","severity":1,"message":"395","line":1,"column":25,"nodeType":"340","messageId":"341","endLine":1,"endColumn":29},{"ruleId":"338","severity":1,"message":"339","line":3,"column":17,"nodeType":"340","messageId":"341","endLine":3,"endColumn":27},{"ruleId":"338","severity":1,"message":"396","line":6,"column":27,"nodeType":"340","messageId":"341","endLine":6,"endColumn":33},{"ruleId":"338","severity":1,"message":"419","line":20,"column":7,"nodeType":"340","messageId":"341","endLine":20,"endColumn":16},{"ruleId":"338","severity":1,"message":"420","line":26,"column":9,"nodeType":"340","messageId":"341","endLine":26,"endColumn":15},{"ruleId":"338","severity":1,"message":"421","line":5,"column":5,"nodeType":"340","messageId":"341","endLine":5,"endColumn":12},{"ruleId":"338","severity":1,"message":"422","line":13,"column":10,"nodeType":"340","messageId":"341","endLine":13,"endColumn":32},{"ruleId":"338","severity":1,"message":"423","line":35,"column":7,"nodeType":"340","messageId":"341","endLine":35,"endColumn":21},{"ruleId":"338","severity":1,"message":"342","line":1,"column":39,"nodeType":"340","messageId":"341","endLine":1,"endColumn":48},{"ruleId":"338","severity":1,"message":"424","line":24,"column":12,"nodeType":"340","messageId":"341","endLine":24,"endColumn":17},{"ruleId":"359","severity":1,"message":"425","line":94,"column":6,"nodeType":"361","endLine":94,"endColumn":8,"suggestions":"426"},{"ruleId":"359","severity":1,"message":"427","line":100,"column":6,"nodeType":"361","endLine":100,"endColumn":14,"suggestions":"428"},{"ruleId":"429","severity":1,"message":"430","line":103,"column":23,"nodeType":"431","messageId":"432","endLine":103,"endColumn":25},{"ruleId":"429","severity":1,"message":"430","line":103,"column":44,"nodeType":"431","messageId":"432","endLine":103,"endColumn":46},{"ruleId":"359","severity":1,"message":"433","line":117,"column":6,"nodeType":"361","endLine":117,"endColumn":32,"suggestions":"434"},{"ruleId":"365","severity":1,"message":"366","line":205,"column":15,"nodeType":"355","endLine":205,"endColumn":43},{"ruleId":"338","severity":1,"message":"398","line":7,"column":8,"nodeType":"340","messageId":"341","endLine":7,"endColumn":22},{"ruleId":"359","severity":1,"message":"435","line":35,"column":8,"nodeType":"361","endLine":35,"endColumn":26,"suggestions":"436"},{"ruleId":"338","severity":1,"message":"342","line":1,"column":29,"nodeType":"340","messageId":"341","endLine":1,"endColumn":38},{"ruleId":"359","severity":1,"message":"437","line":29,"column":8,"nodeType":"361","endLine":29,"endColumn":18,"suggestions":"438"},{"ruleId":"359","severity":1,"message":"382","line":46,"column":8,"nodeType":"361","endLine":46,"endColumn":26,"suggestions":"439"},{"ruleId":"338","severity":1,"message":"440","line":1,"column":10,"nodeType":"340","messageId":"341","endLine":1,"endColumn":15},{"ruleId":"338","severity":1,"message":"441","line":57,"column":9,"nodeType":"340","messageId":"341","endLine":57,"endColumn":14},"no-fallthrough","Expected a 'break' statement before 'default'.","SwitchCase","default","no-native-reassign",["442"],"no-negated-in-lhs",["443"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'liked' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'IconText' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getPost'. Either include it or remove the dependency array.","ArrayExpression",["444"],"React Hook useEffect has missing dependencies: 'loadingData' and 'setPost'. Either include them or remove the dependency array.",["445"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'breakPoints' is assigned a value but never used.","'useMemo' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has missing dependencies: 'called', 'loadDataUser', and 'refetch'. Either include them or remove the dependency array.",["446"],"React Hook useEffect has a missing dependency: 'error'. Either include it or remove the dependency array.",["447"],"React Hook useMemo has missing dependencies: 'facebookData', 'googleData', 'liked', 'login', 'notifications', and 'user'. Either include them or remove the dependency array.",["448"],"'useQuery' is defined but never used.","React Hook useEffect has missing dependencies: 'getPosts' and 'range'. Either include them or remove the dependency array.",["449"],"React Hook useEffect has missing dependencies: 'loadingData' and 'setPosts'. Either include them or remove the dependency array.",["450"],"import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","'LOGIN_USER_FACEBOOK' is defined but never used.","'Button' is defined but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","React Hook useEffect has a missing dependency: 'repost'. Either include it or remove the dependency array.",["451"],"no-dupe-keys","Duplicate key 'objectFit'.","ObjectExpression","'Tabs' is defined but never used.","'Sticky' is defined but never used.","'GET_POSTS' is defined but never used.","'InfiniteScroll' is defined but never used.","React Hook useEffect has missing dependencies: 'loadingData' and 'setMutedPost'. Either include them or remove the dependency array.",["452"],"'Row' is defined but never used.","'Col' is defined but never used.","'Menu' is defined but never used.","'Dropdown' is defined but never used.","'moment' is defined but never used.","'Link' is defined but never used.","'Pin' is defined but never used.","'LikeButton' is defined but never used.","'CommentButton' is defined but never used.","'RepostButton' is defined but never used.","'EllipsisOutlined' is defined but never used.","'address' is assigned a value but never used.","'deletePost' is assigned a value but never used.","'mutePost' is assigned a value but never used.","'userName' is assigned a value but never used.",["442"],["443"],"'Radio' is defined but never used.","'onChange2' is assigned a value but never used.","'value2' is assigned a value but never used.","'Tooltip' is defined but never used.","'QuestionCircleOutlined' is defined but never used.","'formItemLayout' is assigned a value but never used.","'login' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'showPosition'. Either include it or remove the dependency array.",["453"],"React Hook useEffect has a missing dependency: 'getRepost'. Either include it or remove the dependency array.",["454"],"no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","React Hook useEffect has missing dependencies: 'createPost', 'isOpenNewPost', 'lat', 'lng', 'repost', and 'state'. Either include them or remove the dependency array.",["455"],"React Hook useEffect has missing dependencies: 'loadingData' and 'setSubscribePosts'. Either include them or remove the dependency array.",["456"],"React Hook useEffect has a missing dependency: 'getPosts'. Either include it or remove the dependency array.",["457"],["458"],"'Space' is defined but never used.","'range' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"459","fix":"460"},{"desc":"461","fix":"462"},{"desc":"463","fix":"464"},{"desc":"465","fix":"466"},{"desc":"467","fix":"468"},{"desc":"469","fix":"470"},{"desc":"471","fix":"472"},{"desc":"473","fix":"474"},{"desc":"475","fix":"476"},{"desc":"477","fix":"478"},{"desc":"479","fix":"480"},{"desc":"481","fix":"482"},{"desc":"483","fix":"484"},{"desc":"485","fix":"486"},{"desc":"471","fix":"487"},"Update the dependencies array to be: [getPost, id]",{"range":"488","text":"489"},"Update the dependencies array to be: [data, _isMounted, setPost, loadingData]",{"range":"490","text":"491"},"Update the dependencies array to be: [called, loadDataUser, refetch, token]",{"range":"492","text":"493"},"Update the dependencies array to be: [loading, data, error]",{"range":"494","text":"495"},"Update the dependencies array to be: [facebookData, googleData, liked, login, notifications, user]",{"range":"496","text":"497"},"Update the dependencies array to be: [getPosts, location, range]",{"range":"498","text":"499"},"Update the dependencies array to be: [data, _isMounted, setPosts, loadingData]",{"range":"500","text":"501"},"Update the dependencies array to be: [post, isRepost, repost]",{"range":"502","text":"503"},"Update the dependencies array to be: [data, _isMounted, setMutedPost, loadingData]",{"range":"504","text":"505"},"Update the dependencies array to be: [showPosition]",{"range":"506","text":"507"},"Update the dependencies array to be: [getRepost, repost]",{"range":"508","text":"509"},"Update the dependencies array to be: [uploaded, isFinishUpload, isOpenNewPost, state, lat, lng, repost, createPost]",{"range":"510","text":"511"},"Update the dependencies array to be: [data, _isMounted, setSubscribePosts, loadingData]",{"range":"512","text":"513"},"Update the dependencies array to be: [getPosts, location]",{"range":"514","text":"515"},{"range":"516","text":"501"},[1660,1664],"[getPost, id]",[2268,2286],"[data, _isMounted, setPost, loadingData]",[3525,3532],"[called, loadDataUser, refetch, token]",[4184,4199],"[loading, data, error]",[5527,5534],"[facebookData, googleData, liked, login, notifications, user]",[1048,1058],"[getPosts, location, range]",[1432,1450],"[data, _isMounted, setPosts, loadingData]",[2638,2654],"[post, isRepost, repost]",[1045,1063],"[data, _isMounted, setMutedPost, loadingData]",[2254,2256],"[showPosition]",[2362,2370],"[getRepost, repost]",[2754,2780],"[uploaded, isFinishUpload, isOpenNewPost, state, lat, lng, repost, createPost]",[1071,1089],"[data, _isMounted, setSubscribePosts, loadingData]",[969,979],"[getPosts, location]",[1406,1424]]