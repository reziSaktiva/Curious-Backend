[{"D:\\Web Dev\\curious-app75\\frontend\\src\\index.js":"1","D:\\Web Dev\\curious-app75\\frontend\\src\\App.js":"2","D:\\Web Dev\\curious-app75\\frontend\\src\\util\\UserRoute.jsx":"3","D:\\Web Dev\\curious-app75\\frontend\\src\\util\\AuthRoute.jsx":"4","D:\\Web Dev\\curious-app75\\frontend\\src\\util\\GoogleAuthRoute.jsx":"5","D:\\Web Dev\\curious-app75\\frontend\\src\\util\\HomeRoute.jsx":"6","D:\\Web Dev\\curious-app75\\frontend\\src\\pages\\registerFacebook.jsx":"7","D:\\Web Dev\\curious-app75\\frontend\\src\\pages\\register.jsx":"8","D:\\Web Dev\\curious-app75\\frontend\\src\\pages\\registerGoogle.jsx":"9","D:\\Web Dev\\curious-app75\\frontend\\src\\util\\FacebookAuthRoute.jsx":"10","D:\\Web Dev\\curious-app75\\frontend\\src\\pages\\nearby.jsx":"11","D:\\Web Dev\\curious-app75\\frontend\\src\\context\\Context.jsx":"12","D:\\Web Dev\\curious-app75\\frontend\\src\\pages\\subscribePosts.jsx":"13","D:\\Web Dev\\curious-app75\\frontend\\src\\pages\\map\\index.jsx":"14","D:\\Web Dev\\curious-app75\\frontend\\src\\pages\\mutedPosts.jsx":"15","D:\\Web Dev\\curious-app75\\frontend\\src\\pages\\Visited.jsx":"16","D:\\Web Dev\\curious-app75\\frontend\\src\\pages\\grid.jsx":"17","D:\\Web Dev\\curious-app75\\frontend\\src\\pages\\detailPost.jsx":"18","D:\\Web Dev\\curious-app75\\frontend\\src\\pages\\Profile.jsx":"19","D:\\Web Dev\\curious-app75\\frontend\\src\\pages\\popular.jsx":"20","D:\\Web Dev\\curious-app75\\frontend\\src\\pages\\login\\index.jsx":"21","D:\\Web Dev\\curious-app75\\frontend\\src\\pages\\reset-password\\index.jsx":"22","D:\\Web Dev\\curious-app75\\frontend\\src\\pages\\landing-page\\index.jsx":"23","D:\\Web Dev\\curious-app75\\frontend\\src\\pages\\confirm-password\\index.jsx":"24","D:\\Web Dev\\curious-app75\\frontend\\src\\GraphQL\\Mutations.js":"25","D:\\Web Dev\\curious-app75\\frontend\\src\\GraphQL\\Queries.js":"26","D:\\Web Dev\\curious-app75\\frontend\\src\\context\\auth.jsx":"27","D:\\Web Dev\\curious-app75\\frontend\\src\\pages\\home.jsx":"28","D:\\Web Dev\\curious-app75\\frontend\\src\\util\\ConfigMap.jsx":"29","D:\\Web Dev\\curious-app75\\frontend\\src\\context\\constant.jsx":"30","D:\\Web Dev\\curious-app75\\frontend\\src\\util\\Session.jsx":"31","D:\\Web Dev\\curious-app75\\frontend\\src\\context\\posts.jsx":"32","D:\\Web Dev\\curious-app75\\frontend\\src\\components\\InfiniteScroll.jsx":"33","D:\\Web Dev\\curious-app75\\frontend\\src\\components\\NavBar.jsx":"34","D:\\Web Dev\\curious-app75\\frontend\\src\\util\\style\\mapstyle.jsx":"35","D:\\Web Dev\\curious-app75\\frontend\\src\\components\\PostCard.jsx":"36","D:\\Web Dev\\curious-app75\\frontend\\src\\components\\PostNavBar.jsx":"37","D:\\Web Dev\\curious-app75\\frontend\\src\\util\\Firebase.jsx":"38","D:\\Web Dev\\curious-app75\\frontend\\src\\components\\LoginGoogleButton.jsx":"39","D:\\Web Dev\\curious-app75\\frontend\\src\\components\\LoginFacebookButton.jsx":"40","D:\\Web Dev\\curious-app75\\frontend\\src\\components\\AppBar\\index.jsx":"41","D:\\Web Dev\\curious-app75\\frontend\\src\\components\\SkeletonLoading.jsx":"42","D:\\Web Dev\\curious-app75\\frontend\\src\\components\\Buttons\\RepostButton\\index.jsx":"43","D:\\Web Dev\\curious-app75\\frontend\\src\\util\\Config.jsx":"44","D:\\Web Dev\\curious-app75\\frontend\\src\\components\\Buttons\\CommentButton\\index.jsx":"45","D:\\Web Dev\\curious-app75\\frontend\\src\\components\\Buttons\\LikeButton\\index.jsx":"46","D:\\Web Dev\\curious-app75\\frontend\\src\\components\\AddPost\\ButtonAdd.jsx":"47","D:\\Web Dev\\curious-app75\\frontend\\src\\components\\AddPost\\index.jsx":"48","D:\\Web Dev\\curious-app75\\frontend\\src\\components\\BottomBar\\index.jsx":"49","D:\\Web Dev\\curious-app75\\frontend\\src\\components\\Notification.jsx":"50","D:\\Web Dev\\curious-app75\\frontend\\src\\components\\Sidebar.jsx":"51"},{"size":1726,"mtime":1621393194471,"results":"52","hashOfConfig":"53"},{"size":2554,"mtime":1622602276653,"results":"54","hashOfConfig":"53"},{"size":412,"mtime":1619762880454,"results":"55","hashOfConfig":"53"},{"size":395,"mtime":1619762880439,"results":"56","hashOfConfig":"53"},{"size":539,"mtime":1622085221121,"results":"57","hashOfConfig":"53"},{"size":458,"mtime":1619762880454,"results":"58","hashOfConfig":"53"},{"size":5737,"mtime":1622085221121,"results":"59","hashOfConfig":"53"},{"size":8599,"mtime":1612523609516,"results":"60","hashOfConfig":"53"},{"size":5971,"mtime":1622085221121,"results":"61","hashOfConfig":"53"},{"size":503,"mtime":1611296376627,"results":"62","hashOfConfig":"53"},{"size":1425,"mtime":1620205420898,"results":"63","hashOfConfig":"53"},{"size":307,"mtime":1611741122338,"results":"64","hashOfConfig":"53"},{"size":1615,"mtime":1622616735317,"results":"65","hashOfConfig":"53"},{"size":3905,"mtime":1622085221121,"results":"66","hashOfConfig":"53"},{"size":1646,"mtime":1621500089535,"results":"67","hashOfConfig":"53"},{"size":7395,"mtime":1621393194473,"results":"68","hashOfConfig":"53"},{"size":1500,"mtime":1622603581586,"results":"69","hashOfConfig":"53"},{"size":11092,"mtime":1622603581585,"results":"70","hashOfConfig":"53"},{"size":9372,"mtime":1622620895538,"results":"71","hashOfConfig":"53"},{"size":2120,"mtime":1622602276662,"results":"72","hashOfConfig":"53"},{"size":3188,"mtime":1622602276662,"results":"73","hashOfConfig":"53"},{"size":2997,"mtime":1622602276663,"results":"74","hashOfConfig":"53"},{"size":2795,"mtime":1622602276661,"results":"75","hashOfConfig":"53"},{"size":3492,"mtime":1622602276658,"results":"76","hashOfConfig":"53"},{"size":5980,"mtime":1622606033927,"results":"77","hashOfConfig":"53"},{"size":7193,"mtime":1622603581582,"results":"78","hashOfConfig":"53"},{"size":5915,"mtime":1622618186806,"results":"79","hashOfConfig":"53"},{"size":2258,"mtime":1622617087756,"results":"80","hashOfConfig":"53"},{"size":71,"mtime":1622085221121,"results":"81","hashOfConfig":"53"},{"size":599,"mtime":1622617869691,"results":"82","hashOfConfig":"53"},{"size":1420,"mtime":1622085221121,"results":"83","hashOfConfig":"53"},{"size":10880,"mtime":1622616967070,"results":"84","hashOfConfig":"53"},{"size":1516,"mtime":1622442693636,"results":"85","hashOfConfig":"53"},{"size":1245,"mtime":1622085221121,"results":"86","hashOfConfig":"53"},{"size":2304,"mtime":1614929741518,"results":"87","hashOfConfig":"53"},{"size":14041,"mtime":1622605943975,"results":"88","hashOfConfig":"53"},{"size":1003,"mtime":1622436559317,"results":"89","hashOfConfig":"53"},{"size":417,"mtime":1622085221121,"results":"90","hashOfConfig":"53"},{"size":1819,"mtime":1622085221121,"results":"91","hashOfConfig":"53"},{"size":2061,"mtime":1620028289523,"results":"92","hashOfConfig":"53"},{"size":1098,"mtime":1622602276654,"results":"93","hashOfConfig":"53"},{"size":682,"mtime":1622603581584,"results":"94","hashOfConfig":"53"},{"size":1187,"mtime":1621393194468,"results":"95","hashOfConfig":"53"},{"size":351,"mtime":1611123483669,"results":"96","hashOfConfig":"53"},{"size":1013,"mtime":1622085221121,"results":"97","hashOfConfig":"53"},{"size":1796,"mtime":1622100857071,"results":"98","hashOfConfig":"53"},{"size":595,"mtime":1621393194466,"results":"99","hashOfConfig":"53"},{"size":8971,"mtime":1621393194466,"results":"100","hashOfConfig":"53"},{"size":1743,"mtime":1622602276656,"results":"101","hashOfConfig":"53"},{"size":3496,"mtime":1622603581582,"results":"102","hashOfConfig":"53"},{"size":4637,"mtime":1622607233144,"results":"103","hashOfConfig":"53"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"107"},"1a4iafk",{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"107"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"107"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"107"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"107"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"107"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"107"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"107"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"107"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"107"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"107"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"107"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"107"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"107"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"173","messages":"174","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"107"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"107"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"193","messages":"194","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"107"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"107"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"107"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"107"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"107"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"107"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Web Dev\\curious-app75\\frontend\\src\\index.js",["229"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { ApolloProvider, ApolloClient, InMemoryCache, HttpLink, from} from '@apollo/client';\r\nimport { setContext } from 'apollo-link-context'\r\nimport { concat } from 'apollo-link'\r\nimport { onError } from 'apollo-link-error';\r\nimport { isMobile } from \"react-device-detect\";\r\n\r\n// Importing styles\r\nimport './index.css'\r\n\r\n// Importing components\r\nimport App from './App'\r\n\r\nconst link = from([\r\n  new HttpLink({uri: 'http://localhost:5000/insvire-curious-app12/us-central1/graphql'})\r\n])\r\n\r\nconst errorLink = onError(\r\n  ({ graphQLErrors, networkError, operation, forward }) => {\r\n    if (graphQLErrors) {\r\n      for (let err of graphQLErrors) {\r\n        switch (err.extensions.code) {\r\n          case 'UNAUTHENTICATED':\r\n            // error code is set to UNAUTHENTICATED\r\n            // when AuthenticationError thrown in resolver\r\n            console.log('do auto logout')\r\n          default:\r\n            console.log(err.extensions)\r\n        }\r\n      }\r\n    }\r\n    if (networkError) {\r\n      console.log(`[Network error]: ${networkError}`);\r\n      // if you would also like to retry automatically on\r\n      // network errors, we recommend that you use\r\n      // apollo-link-retry\r\n    }\r\n  }\r\n);\r\n\r\nconst authLink = setContext(() => {\r\n  const token = localStorage.token\r\n\r\n  return {\r\n    headers: {\r\n      Authorization : token ? `Bearer ${token}` : ''\r\n    }\r\n  }\r\n})\r\n\r\nconst client = new ApolloClient({\r\n  cache: new InMemoryCache(),\r\n  link: concat(errorLink, concat(authLink, link))\r\n});\r\n\r\nwindow.isMobile = isMobile;\r\n\r\nReactDOM.render(\r\n  <ApolloProvider client={client}>\r\n    <App />\r\n  </ApolloProvider>,\r\n  document.getElementById('root')\r\n)\r\n",["230","231"],"D:\\Web Dev\\curious-app75\\frontend\\src\\App.js",[],"D:\\Web Dev\\curious-app75\\frontend\\src\\util\\UserRoute.jsx",["232"],"import React, { useContext } from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\n\r\nfunction UserRoute({ component: Component, ...rest }) {\r\n    const user = localStorage.token\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={props =>\r\n                !user ? <Redirect to='/' /> : <Component {...props} />\r\n            }\r\n        />\r\n    )\r\n}\r\n\r\nexport default UserRoute;","D:\\Web Dev\\curious-app75\\frontend\\src\\util\\AuthRoute.jsx",[],"D:\\Web Dev\\curious-app75\\frontend\\src\\util\\GoogleAuthRoute.jsx",[],"D:\\Web Dev\\curious-app75\\frontend\\src\\util\\HomeRoute.jsx",["233"],"import React, { useContext } from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport home from '../pages/home';\r\n\r\nfunction HomeRoute({ component: Component, ...rest }) {\r\n    const user = localStorage.token\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={props =>\r\n                user ? <Route exact path=\"/\" component={home} /> : <Component {...props} />\r\n            }\r\n        />\r\n    )\r\n}\r\n\r\nexport default HomeRoute;","D:\\Web Dev\\curious-app75\\frontend\\src\\pages\\registerFacebook.jsx",[],"D:\\Web Dev\\curious-app75\\frontend\\src\\pages\\register.jsx",[],"D:\\Web Dev\\curious-app75\\frontend\\src\\pages\\registerGoogle.jsx",["234","235","236"],"import React, { useContext, useState } from 'react';\r\nimport {\r\n    Form,\r\n    Input,\r\n    Tooltip,\r\n    Cascader,\r\n    Select,\r\n    Checkbox,\r\n    Button,\r\n    DatePicker,\r\n    Alert\r\n} from 'antd';\r\nimport { QuestionCircleOutlined } from '@ant-design/icons';\r\nimport { useMutation } from '@apollo/client'\r\nimport { REGISTER_USER_GOOGLE } from '../GraphQL/Mutations'\r\n\r\nimport { AuthContext } from '../context/auth'\r\n\r\n\r\nconst { Option } = Select;\r\nconst gender = [\r\n    {\r\n        value: 'male',\r\n        label: 'male',\r\n    },\r\n    {\r\n        value: 'female',\r\n        label: 'female',\r\n    },\r\n    {\r\n        value: 'other',\r\n        label: 'other',\r\n    },\r\n];\r\nconst formItemLayout = {\r\n    labelCol: {\r\n        xs: {\r\n            span: 24,\r\n        },\r\n        sm: {\r\n            span: 8,\r\n        },\r\n    },\r\n    wrapperCol: {\r\n        xs: {\r\n            span: 24,\r\n        },\r\n        sm: {\r\n            span: 16,\r\n        },\r\n    },\r\n};\r\nconst tailFormItemLayout = {\r\n    wrapperCol: {\r\n        xs: {\r\n            span: 24,\r\n            offset: 0,\r\n        },\r\n        sm: {\r\n            span: 16,\r\n            offset: 8,\r\n        },\r\n    },\r\n};\r\n\r\nconst RegisterGoogle = (props) => {\r\n    const context = useContext(AuthContext)\r\n    const [form] = Form.useForm();\r\n    const [errors, setErrors] = useState({});\r\n    console.log(context.googleData);\r\n\r\n    const [registerUserGoogle] = useMutation(REGISTER_USER_GOOGLE, {\r\n        update(_, { data: { registerUserWithGoogle: userData } }){\r\n            context.login(userData.token)\r\n            props.history.push('/')\r\n        },\r\n        onError(err) {\r\n            console.log(err.message);\r\n            setErrors(err.message)\r\n        }\r\n    })\r\n\r\n    const onFinish = (values) => {\r\n        const { birthday, gender, phone, phoneCode } = values\r\n        const { email, username, imageUrl, token, id } = context.googleData\r\n        registerUserGoogle({ variables: { gender: gender[0], birthday: birthday._d, mobileNumber: `${phoneCode + phone}`, username, email, imageUrl, token, id } })\r\n        console.log(context.googleData, values);\r\n    };\r\n    const onCloseErr = (e) => {\r\n        console.log(e, 'I was closed.');\r\n    };\r\n    const phoneCode = (\r\n        <Form.Item name=\"phoneCode\" noStyle>\r\n            <Select\r\n                style={{\r\n                    width: 70,\r\n                }}\r\n            >\r\n                <Option value=\"+62\">+62</Option>\r\n                <Option value=\"+87\">+87</Option>\r\n            </Select>\r\n        </Form.Item>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <div className=\"curious\" style={{ display: \"block\", marginLeft: \"auto\", marginRight: \"auto\", backgroundRepeat: 'no-repeat' }} />\r\n                <div class=\"ui card container\" style={{ width: 447, marginTop: 30, paddingTop: 30, padding: 30 }}>\r\n                    <div class=\"content\">\r\n\r\n                        <Form\r\n                            form={form}\r\n                            name=\"register\"\r\n                            onFinish={onFinish}\r\n                            initialValues={{\r\n                                residence: ['zhejiang', 'hangzhou', 'xihu'],\r\n                                prefix: '86',\r\n                            }}\r\n                            scrollToFirstError\r\n                        >\r\n            <h3>Hello, {context.googleData.username}</h3>\r\n            <p>isi data data di bawah untuk menyelesaikan pendaftaran anda</p>\r\n\r\n            <Form.Item\r\n                name=\"gender\"\r\n                label=\"chose gender\"\r\n                rules={[\r\n                    {\r\n                        type: 'array',\r\n                        required: true,\r\n                        message: 'Please select your gender!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Cascader options={gender} />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                name=\"phone\"\r\n                label=\"Phone Number\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input your phone number!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input\r\n                    addonBefore={phoneCode}\r\n                    style={{\r\n                        width: '100%',\r\n                    }}\r\n                />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                label=\"birthday\"\r\n                name=\"birthday\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input your birthday!',\r\n                    },\r\n                ]}\r\n            >\r\n                <DatePicker />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                name=\"agreement\"\r\n                valuePropName=\"checked\"\r\n                rules={[\r\n                    {\r\n                        validator: (_, value) =>\r\n                            value ? Promise.resolve() : Promise.reject('Should accept agreement'),\r\n                    },\r\n                ]}\r\n                {...tailFormItemLayout}\r\n            >\r\n                <Checkbox>\r\n                    I have read the agreement\r\n                </Checkbox>\r\n            </Form.Item>\r\n            <Form.Item {...tailFormItemLayout}>\r\n                <Button type=\"primary\" htmlType=\"submit\" style={{backgroundColor: \"#7f57ff\", borderRadius: 10}}>\r\n                    Register\r\n        </Button>\r\n            </Form.Item>\r\n            {Object.keys(errors).length > 0 && (\r\n                <Alert\r\n                    message={errors}\r\n                    type=\"error\"\r\n                    closable\r\n                    onClose={onCloseErr}\r\n                />\r\n            )}\r\n                        </Form>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RegisterGoogle\r\n","D:\\Web Dev\\curious-app75\\frontend\\src\\util\\FacebookAuthRoute.jsx",[],"D:\\Web Dev\\curious-app75\\frontend\\src\\pages\\nearby.jsx",["237"],"import { useContext, useEffect } from \"react\";\r\nimport { get } from \"lodash\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport PostCard from \"../components/PostCard\";\r\nimport InfiniteScroll from \"../components/InfiniteScroll\";\r\n\r\nimport { GET_POSTS_BASED_ON_NEAREST_LOC } from \"../GraphQL/Queries\";\r\nimport { AuthContext } from \"../context/auth\";\r\n\r\nconst NearbyPost = (props) => {\r\n  const { user } = useContext(AuthContext)\r\n  const lat = JSON.parse(localStorage.location).lat;\r\n  const lng = JSON.parse(localStorage.location).lng;\r\n\r\n  const { data, loading: loadingPosts } = useQuery(\r\n    GET_POSTS_BASED_ON_NEAREST_LOC,\r\n    {\r\n      variables: { lat: lat.toString(), lng: lng.toString() },\r\n    }\r\n  );\r\n\r\n  const posts = get(data, \"getPostBasedOnNearestLoc\") || [];\r\n\r\n  if (loadingPosts) return <div>loading...</div>;\r\n\r\n  return (\r\n    <div>\r\n      <InfiniteScroll isLoading={loadingPosts}>\r\n        {!posts\r\n          ? null\r\n          : posts.map((post, key) => {\r\n              return user &&\r\n                post.muted.find((mute) => mute.owner === user.username) ? (\r\n                <div key={`posts${post.id} ${key}`}></div>\r\n              ) : (\r\n                <div key={`posts${post.id} ${key}`}>\r\n                  <PostCard post={post} loading={loadingPosts} />\r\n                </div>\r\n              );\r\n            })}\r\n      </InfiniteScroll>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NearbyPost;\r\n","D:\\Web Dev\\curious-app75\\frontend\\src\\context\\Context.jsx",[],"D:\\Web Dev\\curious-app75\\frontend\\src\\pages\\subscribePosts.jsx",["238","239"],"D:\\Web Dev\\curious-app75\\frontend\\src\\pages\\map\\index.jsx",["240"],"import React, { useState } from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Slider } from 'antd'\r\nimport {\r\n    GoogleMap,\r\n    useLoadScript,\r\n    Marker,\r\n    Circle\r\n} from '@react-google-maps/api'\r\nimport { Button } from 'antd';\r\nimport { AimOutlined, LeftOutlined } from '@ant-design/icons';\r\n\r\nimport { getRangeSearch } from '../../util/Session';\r\n\r\n// Constant\r\nimport { LS_LOCATION, R_SEARCH } from '../../context/constant'\r\nimport { MAP_API_KEY } from '../../util/ConfigMap';\r\n\r\n// Styles\r\nimport mapStyle from '../../util/style/mapstyle'\r\nimport './style.css';\r\n\r\nconst libraries = [\"places\"]\r\nconst mapContainerStyle = {\r\n  width: \"100%\",\r\n  height: '75vh'\r\n}\r\nconst options = {\r\n  styles: mapStyle,\r\n  disableDefaultUI: true,\r\n  zoomControl: true\r\n}\r\n\r\nconst MapHeader = props => {\r\n  const { onSetCurrentLoc, onBack } = props;\r\n\r\n  return (\r\n    <div className=\"header-map\">\r\n      <LeftOutlined\r\n        onClick={onBack}\r\n        className=\"header-map__navigate-left\"\r\n      />\r\n      <div className=\"header-map__title\">Change Location</div>\r\n      <AimOutlined\r\n        onClick={onSetCurrentLoc}\r\n        className=\"header-map__navigate-right\"\r\n      />\r\n    </div>\r\n    \r\n  )\r\n}\r\n\r\nconst Map = () => {\r\n  const currentPosition = localStorage.location && JSON.parse(localStorage.location)\r\n  \r\n  const [position, setPosition] = useState(currentPosition);\r\n  const range = getRangeSearch();\r\n  const history = useHistory();\r\n  \r\n  // Hooks Map\r\n  const { isLoaded, loadError } = useLoadScript({\r\n    googleMapsApiKey: MAP_API_KEY,\r\n    libraries,\r\n  });\r\n\r\n  const [radius, setRadius] = useState(1000)\r\n\r\n  const marks = {\r\n    20: \"1km\",\r\n    40: \"5km\",\r\n    60: \"10km\",\r\n    80: \"15km\"\r\n  }\r\n\r\n  const handleBackPage = () => {\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const setCurrentLocation = () => {\r\n    navigator.geolocation.getCurrentPosition((position) => {\r\n      const location = {\r\n        lat: position.coords.latitude,\r\n        lng: position.coords.longitude,\r\n      };\r\n\r\n      localStorage.setItem(LS_LOCATION, JSON.stringify(location));\r\n      setPosition(location);\r\n    })\r\n  }\r\n\r\n  const oSaveRangePosts = () => {\r\n    localStorage.setItem(R_SEARCH, radius / 1000);\r\n    history.push(\"/\");\r\n  }\r\n    \r\n  const onChangeSlider = (value) => {\r\n    let range = 1000\r\n\r\n    if (value <= 60) {\r\n      range = 5000\r\n    } else if (value <= 80) {\r\n      range = 10000\r\n    } else if (value <= 100) {\r\n      range = 15000\r\n    }\r\n\r\n    setRadius(range);\r\n  }\r\n\r\n  if (loadError) return 'Error loading page'\r\n  if (!isLoaded) return 'Loading Maps'\r\n\r\n  return (\r\n      <div>\r\n        <MapHeader\r\n          onSetCurrentLoc={setCurrentLocation}\r\n          onBack={handleBackPage}\r\n        />\r\n        <GoogleMap\r\n          mapContainerStyle={mapContainerStyle}\r\n          zoom={radius >= 15000 ? 11 : 15}\r\n          center={position}\r\n          options={options}>\r\n          <Marker \r\n            position={position}\r\n            icon={{\r\n                url: 'https://firebasestorage.googleapis.com/v0/b/insvire-curious-app12.appspot.com/o/mapRadius%2Fpin-figma.png?alt=media&token=3d842f6c-3338-486c-8605-4940e05b96b6',\r\n                scaledSize: new window.google.maps.Size(15, 18)\r\n          }}/>\r\n          <Circle \r\n            center={position}\r\n            radius={radius}\r\n            options={{\r\n              fillColor: \"#e8e2d8\",\r\n              strokeColor: '#f6c059',\r\n              strokeWeight: 1\r\n            }}\r\n          />\r\n        </GoogleMap>\r\n        <Slider marks={marks} defaultValue={[0, 100]} onChange={onChangeSlider} tooltipVisible={false}/>\r\n        <div className=\"footer-map\">\r\n          <Button\r\n            onClick={oSaveRangePosts}\r\n            className=\"footer-map__btn-confirm btn-curious-colors\"\r\n            type=\"primary\">\r\n            Confirm\r\n          </Button>\r\n        </div>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default Map;","D:\\Web Dev\\curious-app75\\frontend\\src\\pages\\mutedPosts.jsx",["241","242","243"],"import React, { useContext, useEffect, useRef } from 'react'\r\n\r\nimport { useQuery } from '@apollo/client'\r\nimport { GET_MUTED_POSTS, GET_POSTS } from '../GraphQL/Queries'\r\nimport { PostContext } from '../context/posts'\r\n\r\nimport InfiniteScroll from '../components/InfiniteScroll'\r\nimport PostCard from '../components/PostCard'\r\nimport { AuthContext } from '../context/auth'\r\nimport NavBar from '../components/NavBar'\r\n\r\n\r\nfunction MutedPost() {\r\n    const { data } = useQuery(GET_MUTED_POSTS);\r\n\r\n    const _isMounted = useRef(false);\r\n    const { mutedPost, setMutedPost, loadingData, loading } = useContext(PostContext)\r\n    const { user } = useContext(AuthContext)\r\n\r\n    useEffect(() => {\r\n        if (!_isMounted.current && data) { // check if doesn't fetch data\r\n            if (!data) {\r\n                loadingData();\r\n\r\n                return;\r\n            }\r\n\r\n            setMutedPost(data.mutedPosts)\r\n            \r\n            // set did mount react\r\n            _isMounted.current = true;\r\n\r\n            return;\r\n        }\r\n    }, [data, _isMounted])\r\n\r\n    return (\r\n        <div>\r\n            <NavBar />\r\n            {user ? (<div>\r\n                {!mutedPost ? null\r\n                    : mutedPost.map((post, key) => {\r\n                        return (\r\n                                <div key={`posts${post.id} ${key}`}>\r\n                                    {console.log(post)}\r\n                                <PostCard post={post} loading={loading} />\r\n                            </div>\r\n                        )\r\n                    })}\r\n            </div>) : null}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MutedPost","D:\\Web Dev\\curious-app75\\frontend\\src\\pages\\Visited.jsx",["244"],"import React from 'react'\r\nimport 'antd/dist/antd.css';\r\nimport './Visited.css'\r\nimport { Col, Row, Card } from 'antd';\r\nimport imageOne from '../assets/beachone.jfif'\r\n\r\n\r\nexport default function Visited() {\r\n    const breakPoints = [\r\n        { width: 1, itemsToShow: 1 },\r\n        { width: 550, itemsToShow: 2 },\r\n        { width: 768, itemsToShow: 3 },\r\n        { width: 1200, itemsToShow: 4 },\r\n      ];\r\n\r\n    return (\r\n        <div>\r\n            <Row>\r\n                    <Col span={6}>\r\n                    <button class=\"ui inverted basic button\" type=\"text\" onClick={() => {window.history.back()}}>\r\n                            <i class=\"chevron left icon\" style={{ color: 'black' }}></i>\r\n                    </button>\r\n                    </Col>\r\n                    <Col span={12} style={{textAlign: \"center\"}}>\r\n                    <h4>Visited Places</h4>\r\n                    </Col>\r\n                    <Col span={6} style={{textAlign: \"right\"}}>\r\n                    <button class=\"ui inverted basic button\" type=\"text\">\r\n                            <i class=\"ellipsis horizontal icon\" style={{ color: 'black' }}></i>\r\n                    </button>\r\n                    </Col>\r\n                </Row>\r\n\r\n            <div className=\"site-card-wrapper\">\r\n                <Row style={{margin: 10}}>\r\n                    <Col span={8}>\r\n                        <Card \r\n                        className= \"VisitedClass\"\r\n                        bordered={false} \r\n                        cover={\r\n                        <div>\r\n                            <img alt=\"example\" src={imageOne} style={{width: 187, height: 200, margin: 5, borderRadius: 5}} />\r\n                            <h3 style={{ position: \"absolute\",\r\n                                    bottom: 14,\r\n                                    left: 10,\r\n                                    color: \"white\",\r\n                                    fontWeight: \"1200\",\r\n                                    fontSize: 17,\r\n                                    width: 180,\r\n                                    overflow: \"hidden\",\r\n                                    textOverflow: \"ellipsis\"\r\n                                    }}>Tanjung Pinang, Jawa tengah</h3> \r\n                        </div>\r\n                        } />\r\n                    </Col>\r\n                    <Col span={8}>\r\n                    <Card \r\n                        className= \"VisitedClass\"\r\n                        bordered={false} \r\n                        cover={\r\n                        <div>\r\n                            <img alt=\"example\" src={imageOne} style={{width: 187, height: 200, margin: 5, borderRadius: 5}} />\r\n                            <h3 style={{ position: \"absolute\",\r\n                                    bottom: 14,\r\n                                    left: 10,\r\n                                    color: \"white\",\r\n                                    fontWeight: \"1200\",\r\n                                    fontSize: 17,\r\n                                    width: 180,\r\n                                    overflow: \"hidden\",\r\n                                    textOverflow: \"ellipsis\"\r\n                                    }}>Tanjung Pinang, Jawa tengah</h3> \r\n                        </div>\r\n                        } />\r\n                    </Col>\r\n                    <Col span={8}>\r\n                    <Card \r\n                        className= \"VisitedClass\"\r\n                        bordered={false} \r\n                        cover={\r\n                        <div>\r\n                            <img alt=\"example\" src={imageOne} style={{width: 187, height: 200, margin: 5, borderRadius: 5}} />\r\n                            <h3 style={{ position: \"absolute\",\r\n                                    bottom: 14,\r\n                                    left: 10,\r\n                                    color: \"white\",\r\n                                    fontWeight: \"1200\",\r\n                                    fontSize: 17,\r\n                                    width: 180,\r\n                                    overflow: \"hidden\",\r\n                                    textOverflow: \"ellipsis\"\r\n                                    }}>Tanjung Pinang, Jawa tengah</h3> \r\n                        </div>\r\n                        } />\r\n                    </Col>\r\n                    <Col span={8}>\r\n                    <Card \r\n                    className= \"VisitedClass\"\r\n                        bordered={false} \r\n                        cover={\r\n                        <div>\r\n                            <img alt=\"example\" src={imageOne} style={{width: 187, height: 200, margin: 5, borderRadius: 5}} />\r\n                            <h3 style={{ position: \"absolute\",\r\n                                    bottom: 14,\r\n                                    left: 10,\r\n                                    color: \"white\",\r\n                                    fontWeight: \"1200\",\r\n                                    fontSize: 17,\r\n                                    width: 180,\r\n                                    overflow: \"hidden\",\r\n                                    textOverflow: \"ellipsis\"\r\n                                    }}>Tanjung Pinang, Jawa tengah</h3> \r\n                        </div>\r\n                        } />\r\n                    </Col>\r\n                    <Col span={8}>\r\n                    <Card \r\n                    className= \"VisitedClass\"\r\n                        bordered={false} \r\n                        cover={\r\n                        <div>\r\n                            <img alt=\"example\" src={imageOne} style={{width: 187, height: 200, margin: 5, borderRadius: 5}} />\r\n                            <h3 style={{ position: \"absolute\",\r\n                                    bottom: 14,\r\n                                    left: 10,\r\n                                    color: \"white\",\r\n                                    fontWeight: \"1200\",\r\n                                    fontSize: 17,\r\n                                    width: 180,\r\n                                    overflow: \"hidden\",\r\n                                    textOverflow: \"ellipsis\"\r\n                                    }}>Tanjung Pinang, Jawa tengah</h3> \r\n                        </div>\r\n                        } />\r\n                    </Col>\r\n                    <Col span={8}>\r\n                    <Card \r\n                    className= \"VisitedClass\"\r\n                        bordered={false} \r\n                        cover={\r\n                        <div>\r\n                            <img alt=\"example\" src={imageOne} style={{width: 187, height: 200, margin: 5, borderRadius: 5}} />\r\n                            <h3 style={{ position: \"absolute\",\r\n                                    bottom: 14,\r\n                                    left: 10,\r\n                                    color: \"white\",\r\n                                    fontWeight: \"1200\",\r\n                                    fontSize: 17,\r\n                                    width: 180,\r\n                                    overflow: \"hidden\",\r\n                                    textOverflow: \"ellipsis\"\r\n                                    }}>Tanjung Pinang, Jawa tengah</h3> \r\n                        </div>\r\n                        } />\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}","D:\\Web Dev\\curious-app75\\frontend\\src\\pages\\grid.jsx",[],"D:\\Web Dev\\curious-app75\\frontend\\src\\pages\\detailPost.jsx",["245","246","247","248","249","250","251","252","253","254"],"//GQL\r\nimport moment from \"moment\";\r\nimport Geocode from \"react-geocode\";\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { CREATE_COMMENT } from \"../GraphQL/Mutations\";\r\nimport React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport Meta from \"antd/lib/card/Meta\";\r\nimport { Link } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport { get } from \"lodash\";\r\n\r\n//antd\r\nimport {\r\n  Skeleton,\r\n  List,\r\n  Avatar,\r\n  Card,\r\n  Row,\r\n  Col,\r\n  Dropdown,\r\n  Menu,\r\n  Input,\r\n  Upload,\r\n  Button,\r\n  Form,\r\n  Image\r\n} from \"antd\";\r\n\r\n//component\r\nimport Pin from \"../assets/pin-svg-25px.svg\";\r\nimport LikeButton from \"../components/Buttons/LikeButton\";\r\nimport CommentButton from \"../components/Buttons/CommentButton\";\r\nimport RepostButton from \"../components/Buttons/RepostButton\";\r\nimport { EllipsisOutlined, PlusOutlined } from \"@ant-design/icons\";\r\nimport PostNavBar from \"../components/PostNavBar\";\r\n\r\n// Query\r\nimport { GET_POST } from \"../GraphQL/Queries\";\r\nimport { PostContext } from \"../context/posts\";\r\n\r\n//location\r\nGeocode.setApiKey(\"AIzaSyBM6YuNkF6yev9s3XpkG4846oFRlvf2O1k\");\r\nGeocode.setLanguage(\"id\");\r\n\r\nconst IconText = ({ icon, text }) => (\r\n  <span>\r\n    {React.createElement(icon, { style: { marginRight: 8 } })}\r\n    {text}\r\n  </span>\r\n);\r\n\r\nexport default function SinglePost(props) {\r\n  const _isMounted = useRef(false)\r\n  const { post, setPost, loading, loadingData, setComment } = useContext(PostContext);\r\n  const [address, setAddress] = useState(\"\");\r\n  const [repostAddress, setRepostAddress] = useState(\"\");\r\n\r\n  let id = props.match.params.id;\r\n\r\n  const [getPost, { data }] = useLazyQuery(GET_POST ,{\r\n    fetchPolicy: \"network-only\"\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      getPost({ variables: { id } });\r\n    }\r\n  }, [id]);\r\n  //input form\r\n\r\n  useEffect(() => {\r\n    if (!_isMounted.current && data) {\r\n      if (!data) {\r\n        loadingData()\r\n\r\n        return;\r\n      }\r\n\r\n      const post = data.getPost\r\n      setPost(post);\r\n      console.log(post);\r\n\r\n      Geocode.fromLatLng(post.location.lat, post.location.lng).then(\r\n        (response) => {\r\n          const address = response.results[0].address_components[1].short_name;\r\n          setAddress(address);\r\n        },\r\n        (error) => {\r\n          console.error(error);\r\n        }\r\n      );\r\n\r\n      // set did mount react\r\n      _isMounted.current = true;\r\n\r\n      return;\r\n    }\r\n  }, [data, _isMounted]);\r\n\r\n  //repost\r\n  const repost = get(post, \"repost\") || {};\r\n  const isRepost = get(repost, \"id\") || \"\";\r\n\r\n  console.log(\"repost\", repost);\r\n  useEffect(() => {\r\n      if (isRepost) {\r\n        const { location } = repost;\r\n        Geocode.fromLatLng(location.lat, location.lng).then(\r\n          (response) => {\r\n            const address =\r\n              response.results[0].address_components[1].short_name;\r\n            setRepostAddress(address);\r\n          },\r\n          (error) => {\r\n            console.error(error);\r\n          }\r\n        );\r\n      }\r\n  }, [post, isRepost]);\r\n\r\n\r\n  const [createComment] = useMutation(CREATE_COMMENT, {\r\n    onError(err) {\r\n      console.log(err.message);\r\n    },update(_, { data: { createComment: commentData } }){\r\n      setComment(commentData)\r\n  },\r\n  });\r\n\r\n  const onFinish = (values) => {\r\n    const { comment } = values;\r\n    console.log(\"Success:\", values);\r\n\r\n    createComment({ variables: { id, text: comment } });\r\n  };\r\n\r\n  return post ? (\r\n    <List itemLayout=\"vertical\" size=\"large\">\r\n      <PostNavBar />\r\n      <List.Item\r\n        key={post.id}\r\n        actions={\r\n          !loading && [\r\n            <Row gutter={[48, 0]}>\r\n              <Col xs={8} sm={8} md={8} lg={8} xl={8}>\r\n                <LikeButton\r\n                  likeCount={post.likeCount}\r\n                  likes={post.likes}\r\n                  id={post.id}\r\n                />\r\n              </Col>\r\n              <Col xs={8} sm={8} md={8} lg={8} xl={8}>\r\n                <CommentButton commentCount={post.commentCount} />\r\n              </Col>\r\n              <Col xs={8} sm={8} md={8} lg={8} xl={8}>\r\n                <RepostButton />\r\n              </Col>\r\n            </Row>,\r\n          ]\r\n        }\r\n      >\r\n        <Skeleton loading={loading} active avatar>\r\n          <List.Item.Meta\r\n            title={\r\n              <div>\r\n                <Row>\r\n                  <Col span={12}>\r\n                    <img src={Pin} style={{ width: 20, position: \"center\" }} />\r\n                    {address}\r\n                  </Col>\r\n                  <Col span={12} style={{ textAlign: \"right\" }}>\r\n                    <Dropdown\r\n                      overlay={\r\n                        <Menu>\r\n                          <Menu.Item key=\"0\">Subscribe</Menu.Item>\r\n                          <Menu.Item key=\"1\" onClick={(e) => console.log(e)}>\r\n                            Mute\r\n                          </Menu.Item>\r\n                          <Menu.Item key=\"3\">Report</Menu.Item>\r\n                        </Menu>\r\n                      }\r\n                      trigger={[\"click\"]}\r\n                      placement=\"bottomRight\"\r\n                    >\r\n                      <a\r\n                        className=\"ant-dropdown-link\"\r\n                        onClick={(e) => e.preventDefault()}\r\n                      >\r\n                        <EllipsisOutlined />\r\n                      </a>\r\n                    </Dropdown>\r\n                  </Col>\r\n                </Row>\r\n              </div>\r\n            }\r\n            description={moment(post.createdAt).fromNow()}\r\n          />\r\n          {isRepost && (\r\n          <Card\r\n            bodyStyle={{ padding: \"10px 12px\" }}\r\n            style={{\r\n              width: \"100%\",\r\n              height: \"100%\",\r\n              borderRadius: 10,\r\n              backgroundColor: \"#f5f5f5\",\r\n              borderColor: \"#ededed\",\r\n              padding: 0,\r\n              marginBottom: 20,\r\n            }}\r\n          >\r\n            <div style={{ display: \"flex\" }}>\r\n              <p className=\"ic-location-small\" style={{ margin: 0 }} />\r\n              <div style={{ fontWeight: 600, paddingLeft: 10 }}>\r\n                {repostAddress}\r\n              </div>\r\n            </div>\r\n            <span style={{ fontSize: 12 }}>\r\n              {moment(repost.createdAt).fromNow()}\r\n            </span>\r\n            {repost.media?(\r\n              repost.media.length == 1 ? (\r\n                <Image\r\n                  style={{ width: \"100%\", borderRadius: 10, objectFit: \"cover\", maxHeight: 300, objectFit: \"cover\" }}\r\n                  src={repost.media}\r\n                />\r\n              ) : null\r\n              ) : null}\r\n            <div style={{ marginTop: 5 }}>{repost.text}</div>\r\n          </Card>\r\n        )}\r\n          {post.text}\r\n        </Skeleton>\r\n      </List.Item>\r\n      {post.comments && post.comments.length == 0 ? null : (\r\n        <List\r\n          itemLayout=\"vertical\"\r\n          size=\"large\"\r\n          dataSource={post.comments}\r\n          renderItem={(item) => (\r\n            <Card\r\n              style={{\r\n                width: \"100%\",\r\n                backgroundColor: \"#ececec\",\r\n                marginBottom: -20,\r\n              }}\r\n              loading={loading}\r\n            >\r\n              <Meta\r\n                avatar={\r\n                  <Link to=\"/profile\">\r\n                    <Avatar\r\n                      size={50}\r\n                      style={{\r\n                        backgroundColor: item.colorCode,\r\n                        backgroundImage: `url(${item.displayImage})`,\r\n                        backgroundSize: 50,\r\n                      }}\r\n                    />\r\n                  </Link>\r\n                }\r\n                title={\r\n                  <Row>\r\n                    <Col span={12}>\r\n                      <p style={{ fontWeight: \"bold\" }}>{item.displayName}</p>\r\n                    </Col>\r\n                    <Col span={12} style={{ textAlign: \"right\" }}>\r\n                      <Dropdown\r\n                        overlay={\r\n                          <Menu>\r\n                            <Menu.Item key=\"0\">Subscribe</Menu.Item>\r\n                            <Menu.Item key=\"1\" onClick={(e) => console.log(e)}>\r\n                              Mute\r\n                            </Menu.Item>\r\n                            <Menu.Item key=\"3\">Report</Menu.Item>\r\n                          </Menu>\r\n                        }\r\n                        trigger={[\"click\"]}\r\n                        placement=\"bottomRight\"\r\n                      >\r\n                        <a\r\n                          className=\"ant-dropdown-link\"\r\n                          onClick={(e) => e.preventDefault()}\r\n                        >\r\n                          <EllipsisOutlined />\r\n                        </a>\r\n                      </Dropdown>\r\n                    </Col>\r\n                  </Row>\r\n                }\r\n                description={<p style={{ color: \"black\" }}>{item.text}</p>}\r\n              />\r\n              <div\r\n                style={{\r\n                  marginTop: 20,\r\n                  display: \"inline-block\",\r\n                  marginBottom: -20,\r\n                }}\r\n              >\r\n                <p>\r\n                  {moment(item.createdAt).fromNow()}\r\n                  <p\r\n                    style={{\r\n                      fontWeight: \"bold\",\r\n                      display: \"inline-block\",\r\n                      marginLeft: 10,\r\n                    }}\r\n                  >\r\n                    Reply\r\n                  </p>\r\n                </p>\r\n              </div>\r\n            </Card>\r\n          )}\r\n        />\r\n      )}\r\n      <Form\r\n        style={{ marginTop: 21, paddingBottom: -20 }}\r\n        name=\"basic\"\r\n      onFinish={onFinish}\r\n      onFinishFailed={onFinish}\r\n      >\r\n        <Row>\r\n          <Col span={2}>\r\n            <Form.Item name=\"upload\" className=\"centeringButton\">\r\n              <Upload>\r\n                <Button\r\n                  style={{ border: \"none\" }}\r\n                  icon={<PlusOutlined style={{ color: \"#7f57ff\" }} />}\r\n                />\r\n              </Upload>\r\n            </Form.Item>\r\n          </Col>\r\n\r\n          <Col span={19}>\r\n            <Form.Item\r\n              name=\"comment\"\r\n              rules={[\r\n                { required: true, message: \"Isi komennya dulu ya broooo!\" },\r\n              ]}\r\n            >\r\n              <Input\r\n                placeholder=\"Write your comment...\"\r\n                style={{ borderRadius: 20 }}\r\n              />\r\n            </Form.Item>\r\n          </Col>\r\n\r\n          <Col span={3}>\r\n            <Form.Item className=\"centeringButton\">\r\n              <Button\r\n                htmlType=\"submit\"\r\n                style={{\r\n                  borderRadius: 20,\r\n                  backgroundColor: \"#7f57ff\",\r\n                  display: \"inline-block\",\r\n                  color: \"white\",\r\n                }}\r\n              >\r\n                Post\r\n              </Button>\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    </List>\r\n  ) : <div>loading...</div>\r\n}\r\n","D:\\Web Dev\\curious-app75\\frontend\\src\\pages\\Profile.jsx",["255","256","257","258","259","260","261","262","263","264","265"],"D:\\Web Dev\\curious-app75\\frontend\\src\\pages\\popular.jsx",["266","267"],"import React, { useContext, useEffect, useRef } from 'react'\r\n\r\nimport { useLazyQuery } from '@apollo/client'\r\nimport { GET_POPULAR_POSTS } from '../GraphQL/Queries'\r\nimport { PostContext } from '../context/posts'\r\n\r\nimport InfiniteScroll from '../components/InfiniteScroll'\r\nimport PostCard from '../components/PostCard'\r\nimport { AuthContext } from '../context/auth'\r\nimport NavBar from '../components/NavBar'\r\n\r\nimport { getSession } from '../util/Session';\r\n\r\n\r\nfunction Popular() {\r\n    const _isMounted = useRef(false);\r\n    const { posts, setPosts, loadingData, loading } = useContext(PostContext)\r\n    const { user } = useContext(AuthContext)\r\n\r\n    const { location } = getSession();\r\n    const [ getPosts, { data, loading: loadingPosts }] = useLazyQuery(GET_POPULAR_POSTS);\r\n    \r\n    useEffect(() => {\r\n        if (Object.keys(location).length) {\r\n            const loc = JSON.parse(location);\r\n\r\n            getPosts({ variables: loc });\r\n        }\r\n    }, [location]);\r\n\r\n    useEffect(() => {\r\n        if (data  && !_isMounted.current) { // check if doesn't fetch data\r\n            if (!data) {\r\n                loadingData();\r\n\r\n                return;\r\n            }\r\n            setPosts(data.getPopularPosts)\r\n\r\n            _isMounted.current = true\r\n            // set did mount react\r\n\r\n            return;\r\n        }\r\n    }, [data, _isMounted])\r\n\r\n    return (\r\n        <div>\r\n            <NavBar />\r\n            {user ? (<InfiniteScroll isLoading={loadingPosts}>\r\n                {!posts ? null\r\n                    : posts.map((post, key) => {\r\n                        const { muted, id } = post;\r\n                        const isMuted = user && muted && muted.find((mute) => mute.owner === user.username)\r\n                        \r\n                        return (\r\n                            <div key={`posts${id} ${key}`}>\r\n                                {!isMuted && <PostCard post={post} loading={loading} />}\r\n                            </div>\r\n                        )\r\n                    })}\r\n            </InfiniteScroll>) : null}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Popular","D:\\Web Dev\\curious-app75\\frontend\\src\\pages\\login\\index.jsx",["268"],"import React, { useState, useContext, useEffect } from 'react'\r\nimport { Form, Input, Alert } from 'antd';\r\n\r\nimport { useMutation } from '@apollo/client'\r\nimport { LOGIN_USER } from '../../GraphQL/Mutations'\r\n\r\nimport { AuthContext } from '../../context/auth'\r\nimport { Link } from 'react-router-dom';\r\nimport { LoadingOutlined } from \"@ant-design/icons\";\r\n\r\nimport '../reset-password/style.css';\r\n\r\nconst layout = {\r\n  labelCol: {\r\n      span: 8,\r\n  },\r\n  wrapperCol: {\r\n      span: 16,\r\n  },\r\n};\r\n\r\nconst Login = (props) => {\r\n  const context = useContext(AuthContext)\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const [login, { loading }] = useMutation(LOGIN_USER, {\r\n      update(_, { data: { login } }) {\r\n          \r\n          context.login(login)\r\n          props.history.push('/')\r\n      },\r\n      onError(err) {\r\n          setErrors(err.message)\r\n      }\r\n  })\r\n\r\n  const onFinish = (values) => {\r\n      const { username, password } = values\r\n\r\n      login({ variables: { username, password } })\r\n  };\r\n\r\n  const onCloseErr = (e) => {\r\n      console.log(e, 'I was closed.');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Link to='/' className=\"header-page\">\r\n        <div className=\"curious\"/>\r\n      </Link>\r\n      <div className=\"body-page ui card container\" style={{ width: 447, marginTop: 30, paddingTop: 30, padding: 30 }}>\r\n        <div className=\"body-page__wrapper content\">\r\n          <h1>Sign in</h1>\r\n          <Form\r\n            {...layout}\r\n            name=\"basic\"\r\n            initialValues={{\r\n                remember: true,\r\n            }}\r\n            onFinish={onFinish}\r\n          >\r\n            <Form.Item\r\n              name=\"username\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'Please input your email or username!',\r\n                },\r\n              ]}\r\n              className=\"body-page__textfield\"\r\n            >\r\n              <Input placeholder=\"Email / Username\" />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              name=\"password\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'Please input your password!',\r\n                },\r\n              ]}\r\n              className=\"body-page__textfield\"\r\n            >\r\n              <Input.Password placeholder=\"Password\" />\r\n            </Form.Item>\r\n\r\n            <Form.Item>\r\n              <button className=\"ui facebook button body-page__btn-send\" type=\"submit\" >\r\n                {loading ? (<LoadingOutlined />): (\"Sign in\")} \r\n              </button>\r\n            </Form.Item>\r\n          </Form>\r\n          <Link to='/resetPassword'>\r\n            <p style={{ textAlign: 'center' }}>Forgot Password?</p>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <p style={{ textAlign: 'center', marginTop: 30, fontSize: 14 }}>Don't have an account yet? <Link to=\"/register\" style={{ fontWeight: 'bold' }}>Sign Up</Link> now</p>\r\n      {Object.keys(errors).length > 0 && (\r\n        <Alert\r\n          message={errors}\r\n          type=\"error\"\r\n          closable\r\n          onClose={onCloseErr}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;","D:\\Web Dev\\curious-app75\\frontend\\src\\pages\\reset-password\\index.jsx",["269","270"],"import React, { useState, useContext, useEffect } from 'react'\r\nimport { Form, Input, Alert } from 'antd';\r\n\r\nimport { useMutation } from '@apollo/client'\r\nimport { LOGIN_USER } from '../../GraphQL/Mutations'\r\n\r\nimport { AuthContext } from '../../context/auth'\r\nimport { Link } from 'react-router-dom';\r\nimport { auth } from '../../util/Firebase';\r\n\r\nimport './style.css';\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 8,\r\n  },\r\n  wrapperCol: {\r\n    span: 16,\r\n  },\r\n};\r\n\r\nexport default function ReserPassword(props) {\r\n  const context = useContext(AuthContext);\r\n  const [alert, setAlert] = useState('');\r\n  const [message, setMessage] = useState();\r\n\r\n  const [login] = useMutation(LOGIN_USER, {\r\n    update(_, { data: { login } }) {\r\n      \r\n      context.login(login)\r\n      props.history.push('/')\r\n    },\r\n    onError(err) {\r\n      setMessage(err.message)\r\n    }\r\n  })\r\n\r\n  const onFinish = (values) => {\r\n    const { email } = values\r\n\r\n    auth.sendPasswordResetEmail(email).then(\r\n      (resp) => {\r\n        console.log(\"email sent@: \", resp)\r\n        setAlert('success');\r\n        setMessage('Success send link reset passowrd to your email');\r\n      }\r\n    )\r\n    .catch(error => {\r\n      const { message, code } = error;\r\n      setAlert('error');\r\n\r\n      if (code === 'auth/user-not-found') {\r\n          setMessage('Email atau Username tidak ditemukan');\r\n\r\n          return;\r\n      }\r\n\r\n      setMessage(message);\r\n    })\r\n  };\r\n\r\n  const onCloseErr = (e) => {\r\n    console.log(e, 'I was closed.');\r\n    setAlert('');\r\n    setMessage('');\r\n  };\r\n  \r\n  console.log('message: ', !!(message && alert));\r\n  console.log('alert : ', alert)\r\n  return (\r\n    <div>\r\n      <Link to='/' className=\"header-page\">\r\n        <div className=\"curious\"/>\r\n      </Link>\r\n      <div className=\"body-page ui card container\">\r\n        <div className=\"body-page__wrapper content\">\r\n          <h1>Reset Password</h1>\r\n          <Form\r\n            {...layout}\r\n            name=\"basic\"\r\n            initialValues={{\r\n                remember: true,\r\n            }}\r\n            onFinish={onFinish}>\r\n              <Form.Item\r\n                name=\"email\"\r\n                className=\"body-page__textfield\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: 'Please input your email!',\r\n                  },\r\n                ]}\r\n              >\r\n                <Input placeholder=\"Email / Username\" />\r\n              </Form.Item>\r\n\r\n              <Form.Item>\r\n                <button className=\"ui facebook button body-page__btn-send\" type=\"submit\" >\r\n                    Send Verification Email\r\n                </button>\r\n              </Form.Item>\r\n            </Form>\r\n        </div>\r\n      </div>\r\n      {!!(message && alert) && (\r\n        <Alert\r\n          message={message}\r\n          type={alert}\r\n          className=\"message-response\"\r\n          closable\r\n          onClose={onCloseErr}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n","D:\\Web Dev\\curious-app75\\frontend\\src\\pages\\landing-page\\index.jsx",["271"],"import React from 'react'\r\nimport { Col, Row, Button } from 'antd'\r\n\r\nimport LoginFacebook from '../../components/LoginFacebookButton';\r\nimport LoginGoogle from '../../components/LoginGoogleButton';\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport BGLanding from '../../assets/bg-landing.png';\r\n\r\nimport './style.css';\r\n\r\nconst SignIn = (props) => {\r\n  return (\r\n  <div>\r\n    <Row>\r\n      <Col xs={0} sm={12} md={12} lg={12} xl={12}>\r\n        <div className=\"landingimage\" />\r\n        <div className=\"container-landing\">\r\n          <div className=\"curiouslanding\" />\r\n        </div>\r\n      </Col>\r\n      <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n        <div className=\"landingPage-input\">\r\n          {window.isMobile && <img src={BGLanding} width=\"250px\" />}\r\n          <h1>Welcome to Curious!</h1>\r\n\r\n          <div className=\"btn-wrapper\">\r\n            <LoginFacebook props={props} />\r\n            <LoginGoogle props={props} />\r\n          </div>\r\n          \r\n          <Row style={{marginTop: 20}}>\r\n                <Col span={12} style={{paddingLeft: \"15%\", paddingRight: \"4%\"}}>\r\n                <Button className=\"ui black basic button\" style={{ width: \"100%\", padding: 0 }}>\r\n                    <Link to='/register'>\r\n                        Sign Up\r\n                    </Link>\r\n                </Button>\r\n                </Col>\r\n\r\n                <Col span={12} style={{paddingLeft: \"4%\", paddingRight: \"15%\"}}>\r\n                <Button className=\"ui black basic button\" style={{ width: \"100%\", padding: 0 }}>\r\n                    <Link to='login'>\r\n                        Login\r\n                    </Link>\r\n                </Button>\r\n                </Col>\r\n            </Row>\r\n\r\n          <p style={{ marginTop: 30, fontSize: 14 }}>By signing up, you agree to our <span className=\"terms\">Terms & Privacy Policy</span></p>\r\n          <p className=\"copy-right\">&copy; 2020 Curious</p>\r\n\r\n          <Row>\r\n                <Col span={6}>\r\n                    <Button type=\"text\" style={{ fontSize: 8 }}>\r\n                        Terms of Service\r\n                    </Button>\r\n                </Col>\r\n                <Col span={6}>\r\n                    <Button type=\"text\" style={{ fontSize: 8 }}>\r\n                        Privacy Policy\r\n                    </Button>\r\n                </Col>\r\n                <Col span={6}>\r\n                    <Button type=\"text\" style={{ fontSize: 8 }}>\r\n                        Cookie Policy\r\n                    </Button>\r\n                </Col>\r\n                <Col span={6}>\r\n                    <Button type=\"text\" style={{ fontSize: 8 }}>\r\n                        Ads Info\r\n                    </Button>\r\n                </Col>\r\n            </Row>  \r\n        </div>\r\n      </Col>\r\n    </Row>\r\n  </div>)\r\n}\r\n\r\nexport default SignIn;\r\n","D:\\Web Dev\\curious-app75\\frontend\\src\\pages\\confirm-password\\index.jsx",["272","273"],"import React, { useState, useContext, useEffect } from 'react'\r\nimport { Form, Input, Alert } from 'antd';\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport { useMutation } from '@apollo/client'\r\nimport { LOGIN_USER } from '../../GraphQL/Mutations'\r\n\r\nimport { AuthContext } from '../../context/auth'\r\nimport { Link } from 'react-router-dom';\r\nimport { auth } from '../../util/Firebase';\r\n\r\nimport '../reset-password/style.css';\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 8,\r\n  },\r\n  wrapperCol: {\r\n    span: 16,\r\n  },\r\n};\r\n\r\nexport default function ReserPassword(props) {\r\n  const context = useContext(AuthContext);\r\n  const history = useHistory();\r\n\r\n  const search = history.location.search.substring(1);\r\n  const querystring = search && JSON.parse(\r\n    '{\"' + search.replace(/&/g, '\",\"').replace(/=/g,'\":\"') + '\"}',\r\n    function(key, value) { return key===\"\"?value:decodeURIComponent(value)\r\n  });\r\n\r\n  const { oobCode } = querystring;\r\n\r\n  // Local State\r\n  const [alert, setAlert] = useState('');\r\n  const [message, setMessage] = useState('');\r\n\r\n  const [login] = useMutation(LOGIN_USER, {\r\n    update(_, { data: { login } }) {\r\n      \r\n      context.login(login)\r\n      props.history.push('/')\r\n    },\r\n    onError(err) {\r\n      setMessage(err.message)\r\n    }\r\n  })\r\n\r\n  const onFinish = (values) => {\r\n    const { password } = values\r\n\r\n    if (!oobCode) {\r\n      setAlert('error');\r\n      setMessage('Verify code is not valid or expired');\r\n    }\r\n\r\n    auth.confirmPasswordReset(oobCode, password).then(\r\n      () => {\r\n        setAlert('success');\r\n        setMessage('Success reset your password, will redirect to login page in a few seconds');\r\n\r\n        setTimeout(() => {\r\n          history.replace('/login');\r\n        }, 1500)\r\n      }\r\n    )\r\n    .catch(error => {\r\n      const { message, code } = error;\r\n      setAlert('error');\r\n\r\n      if (code === 'auth/user-not-found') {\r\n          setMessage('Email atau Username tidak ditemukan');\r\n\r\n          return;\r\n      }\r\n\r\n      setMessage(message);\r\n    })\r\n  };\r\n\r\n  const onCloseErr = () => {\r\n    setAlert('');\r\n    setMessage('');\r\n  };\r\n  \r\n  return (\r\n    <div>\r\n      <Link to='/' className=\"header-page\">\r\n        <div className=\"curious\"/>\r\n        </Link>\r\n      <div className=\"body-page ui card container\">\r\n        <div className=\"body-page__wrapper content\">\r\n          <h1>Change Password</h1>\r\n          <Form\r\n            {...layout}\r\n            name=\"basic\"\r\n            initialValues={{\r\n                remember: true,\r\n            }}\r\n            onFinish={onFinish}>\r\n              <Form.Item\r\n                name=\"password\"\r\n                className=\"body-page__textfield\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: 'Please input your new password!',\r\n                  },\r\n                ]}\r\n              >\r\n                <Input placeholder=\"Input your new password\" type=\"password\" />\r\n              </Form.Item>\r\n\r\n              <Form.Item>\r\n                <button className=\"ui facebook button body-page__btn-send\" type=\"submit\" >\r\n                    Send\r\n                </button>\r\n              </Form.Item>\r\n            </Form>\r\n        </div>\r\n      </div>\r\n      {!!(message && alert) && (\r\n        <Alert\r\n          message={message}\r\n          type={alert}\r\n          className=\"message-response\"\r\n          closable\r\n          onClose={onCloseErr}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n","D:\\Web Dev\\curious-app75\\frontend\\src\\GraphQL\\Mutations.js",[],"D:\\Web Dev\\curious-app75\\frontend\\src\\GraphQL\\Queries.js",[],"D:\\Web Dev\\curious-app75\\frontend\\src\\context\\auth.jsx",["274","275","276","277"],"D:\\Web Dev\\curious-app75\\frontend\\src\\pages\\home.jsx",["278","279","280"],"D:\\Web Dev\\curious-app75\\frontend\\src\\util\\ConfigMap.jsx",[],"D:\\Web Dev\\curious-app75\\frontend\\src\\context\\constant.jsx",[],"D:\\Web Dev\\curious-app75\\frontend\\src\\util\\Session.jsx",[],"D:\\Web Dev\\curious-app75\\frontend\\src\\context\\posts.jsx",["281","282"],"D:\\Web Dev\\curious-app75\\frontend\\src\\components\\InfiniteScroll.jsx",[],"D:\\Web Dev\\curious-app75\\frontend\\src\\components\\NavBar.jsx",["283","284","285","286","287","288"],"import { Button, Radio, Tabs } from 'antd';\r\nimport React, { useContext, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport { StickyContainer, Sticky } from 'react-sticky';\r\n// Semantic\r\nimport { Menu } from 'semantic-ui-react'\r\n\r\nimport '../App.css'\r\n\r\n\r\nexport default function Login() {\r\n  const history = useHistory();\r\n  const parentTab = history.location.pathname == '/populer' ? 'populer' : 'latest'\r\n  const [nav, setNav] = useState({ value2: parentTab })\r\n\r\n  const optionsWithDisabled = [\r\n    { label: 'Latest', value: 'latest' },\r\n    { label: 'Popular', value: 'popular' },\r\n  ];\r\n\r\n  const onChange2 = e => {\r\n    setNav({\r\n      value2: e.target.value,\r\n    });\r\n    history.push(`/${e.target.value == \"latest\" ? '' : e.target.value}`)\r\n  };\r\n\r\n  const { value2 } = nav;\r\n\r\n  return (\r\n    <StickyContainer style={{ position: \"center\" }}>\r\n      <Menu pointing secondary size='massive'>\r\n        <div className=\"centeredButton\">\r\n          <Radio.Group\r\n            options={optionsWithDisabled}\r\n            onChange={onChange2}\r\n            value={value2}\r\n            optionType=\"button\"\r\n            buttonStyle=\"solid\"\r\n          />\r\n        </div>\r\n      </Menu>\r\n    </StickyContainer>\r\n  )\r\n}","D:\\Web Dev\\curious-app75\\frontend\\src\\util\\style\\mapstyle.jsx",["289"],"export default [\r\n    {\r\n        \"featureType\": \"all\",\r\n        \"elementType\": \"labels\",\r\n        \"stylers\": [\r\n            {\r\n                \"gamma\": 0.26\r\n            },\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"administrative.province\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"on\"\r\n            },\r\n            {\r\n                \"lightness\": -50\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"administrative.province\",\r\n        \"elementType\": \"labels.text\",\r\n        \"stylers\": [\r\n            {\r\n                \"lightness\": 20\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"administrative.province\",\r\n        \"elementType\": \"labels.text.stroke\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"poi\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"hue\": \"#ffffff\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road\",\r\n        \"elementType\": \"labels.text.stroke\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.highway\",\r\n        \"elementType\": \"geometry\",\r\n        \"stylers\": [\r\n            {\r\n                \"lightness\": 50\r\n            },\r\n            {\r\n                \"hue\": \"#ffffff\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.arterial\",\r\n        \"elementType\": \"geometry\",\r\n        \"stylers\": [\r\n            {\r\n                \"lightness\": 20\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.arterial\",\r\n        \"elementType\": \"labels.text\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"on\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.local\",\r\n        \"elementType\": \"labels.text\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"on\"\r\n            }\r\n        ]\r\n    }\r\n]","D:\\Web Dev\\curious-app75\\frontend\\src\\components\\PostCard.jsx",["290","291","292","293","294","295","296","297","298","299","300","301","302","303"],"D:\\Web Dev\\curious-app75\\frontend\\src\\components\\PostNavBar.jsx",["304","305","306","307","308","309","310"],"import { Button, Radio, Tabs } from 'antd';\r\nimport { ArrowLeftOutlined } from \"@ant-design/icons\";\r\nimport React, { useContext, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport { StickyContainer, Sticky } from 'react-sticky';\r\n// Semantic\r\nimport { Menu } from 'semantic-ui-react'\r\n\r\nimport '../App.css'\r\n\r\n\r\nexport default function PostNavBar() {\r\nconst [nav, setNav] = useState({value2: \"Latest\"})\r\n//back button\r\nlet history = useHistory();\r\n\r\n\r\n\r\nconst onChange2 = e => {\r\n    setNav({\r\n        value2: e.target.value,\r\n    });\r\n  };\r\n\r\nconst { value2 } = nav;\r\n\r\n    return (\r\n      <StickyContainer>\r\n        <Menu pointing secondary size='massive'>\r\n          <div style={{display: \"inline-block\",marginLeft: 20, padding: \"10px 0\"}} onClick={() => history.goBack()}>\r\n          <ArrowLeftOutlined />\r\n          </div>\r\n          <p style={{padding: \"10px 0\",marginLeft: 20, fontWeight: 'bolder',}}>Post</p>\r\n        </Menu>\r\n      </StickyContainer>\r\n        )\r\n}","D:\\Web Dev\\curious-app75\\frontend\\src\\util\\Firebase.jsx",[],"D:\\Web Dev\\curious-app75\\frontend\\src\\components\\LoginGoogleButton.jsx",[],"D:\\Web Dev\\curious-app75\\frontend\\src\\components\\LoginFacebookButton.jsx",["311"],"import React, { useContext, useState } from 'react'\r\nimport { Button } from 'antd'\r\n\r\nimport { AuthContext } from '../context/auth'\r\nimport { FacebookProvider, auth } from '../util/Firebase'\r\nimport { gql, useMutation } from '@apollo/client'\r\nimport { LOGIN_USER_FACEBOOK } from '../GraphQL/Mutations'\r\n\r\nconst CHECK_USER_BY_FACEBOOK = gql`\r\n  mutation check($username: String!){\r\n    checkUserWithFacebook(username: $username)\r\n  }\r\n`\r\n\r\nexport default function LoginFacebookButton({ props }) {\r\n  const { loadFacebookData, login } = useContext(AuthContext)\r\n  const [dataFacebook, setFacebookData] = useState({})\r\n\r\n  // const [loginFacebook] = useMutation(LOGIN_USER_FACEBOOK, {\r\n  //   update(_, { data: { loginWithFacebook } }) {\r\n\r\n  //     login(loginWithFacebook)\r\n  //   }\r\n  // })\r\n\r\n  const [check] = useMutation(CHECK_USER_BY_FACEBOOK, {\r\n    update(_, { data: { checkUserWithFacebook } }) {\r\n      if (!checkUserWithFacebook) {\r\n        loadFacebookData(dataFacebook)\r\n        props.history.push('/register/facebook')\r\n      } else {\r\n        const { token } = dataFacebook\r\n        // loginFacebook({ variables: { username, token } })\r\n        login(token)\r\n        props.history.push('/')\r\n      }\r\n    },\r\n    onError(err) {\r\n      console.log(err.message)\r\n    }\r\n  })\r\n\r\n  const signInWithFacebook = async () => {\r\n    auth.signInWithPopup(FacebookProvider).then(function (result) {\r\n      let user = result.user;\r\n      let facebookData = {\r\n        username: user.displayName,\r\n        email: user.email,\r\n        imageUrl: user.photoURL,\r\n        id: user.uid\r\n      }\r\n      user.getIdToken().then(token => {\r\n        facebookData.token = token\r\n      })\r\n      setFacebookData(facebookData)\r\n\r\n      check({ variables: { username: user.displayName } })\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Button onClick={signInWithFacebook} className=\"ui button\" style={{ width: \"100%\", height: 45, color: 'black', background: '#7F57FF', borderRadius: 5 }}>\r\n      <i className=\"facebook icon\" />\r\n          Continue with Facebook\r\n    </Button>\r\n  )\r\n}\r\n\r\n","D:\\Web Dev\\curious-app75\\frontend\\src\\components\\AppBar\\index.jsx",[],"D:\\Web Dev\\curious-app75\\frontend\\src\\components\\SkeletonLoading.jsx",["312"],"import { Space, Skeleton } from 'antd'\r\nimport React from 'react'\r\n\r\nexport default function SkeletonLoading() {\r\n\r\n  return(\r\n    <div style={{ width: window.isMobile ? '200px' : '500px', margin: 20}}>\r\n    <Skeleton active  avatar paragraph={{ rows: 2 }} />\r\n    <Skeleton active  avatar paragraph={{ rows: 2 }} />\r\n    <Skeleton active  avatar paragraph={{ rows: 2 }} />\r\n    <Skeleton active  avatar paragraph={{ rows: 2 }} />\r\n    <Skeleton active  avatar paragraph={{ rows: 2 }} />\r\n    <Skeleton active  avatar paragraph={{ rows: 2 }} />\r\n    <Skeleton active  avatar paragraph={{ rows: 2 }} />\r\n    <Skeleton active  avatar paragraph={{ rows: 2 }} />\r\n    </div>\r\n  )\r\n\r\n\r\n}","D:\\Web Dev\\curious-app75\\frontend\\src\\components\\Buttons\\RepostButton\\index.jsx",[],"D:\\Web Dev\\curious-app75\\frontend\\src\\util\\Config.jsx",[],"D:\\Web Dev\\curious-app75\\frontend\\src\\components\\Buttons\\CommentButton\\index.jsx",[],"D:\\Web Dev\\curious-app75\\frontend\\src\\components\\Buttons\\LikeButton\\index.jsx",["313"],"import React, { useContext, useEffect } from \"react\";\r\nimport { HeartOutlined } from \"@ant-design/icons\";\r\nimport { Button } from \"antd\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { LIKE_POST } from \"../../../GraphQL/Mutations\";\r\nimport { PostContext } from \"../../../context/posts\";\r\nimport { AuthContext } from \"../../../context/auth\";\r\n\r\nexport default function LikeButton({ likeCount, id, likes }) {\r\n  const { like } = useContext(PostContext);\r\n  const { user } = useContext(AuthContext);\r\n\r\n  const [likePost] = useMutation(LIKE_POST, {\r\n    update(_, { data: { likePost } }) {\r\n      like(likePost, id);\r\n    },\r\n  });\r\n\r\n  const onLike = () => {\r\n    likePost({ variables: { id } });\r\n  };\r\n\r\n  return (\r\n    <div className=\"ui labeled\" tabIndex=\"0\">\r\n      <div style={{ marginLeft: 35, marginRight: 5 }}>\r\n        <div\r\n          className=\"ui basic label float\"\r\n          style={{\r\n            height: 25,\r\n            borderRadius: 5,\r\n            top: -3,\r\n            border: \"1px black solid\",\r\n            marginLeft: -10,\r\n            marginRight: -20,\r\n            position: \"relative\",\r\n            backgroundColor: \"white\",\r\n            width: 70\r\n          }}\r\n        >\r\n          <p style={{ marginTop: -4, marginLeft: 5 }}>{likeCount} likes</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ position: \"absolute\", marginTop: -32 }}>\r\n        <Button\r\n          onClick={onLike}\r\n          shape=\"circle\"\r\n          className=\"likeButton\"\r\n          icon={\r\n            // <HeartOutlined />\r\n            user && likes.find((like) => like.owner === user.username) ? (\r\n              <HeartOutlined style={{ color: \"red\" }} />\r\n            ) : (\r\n              <HeartOutlined />\r\n            )\r\n          }\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Web Dev\\curious-app75\\frontend\\src\\components\\AddPost\\ButtonAdd.jsx",[],"D:\\Web Dev\\curious-app75\\frontend\\src\\components\\AddPost\\index.jsx",["314","315","316","317","318","319"],"// Modules\r\nimport React, { useState, useEffect, useContext } from \"react\";\r\nimport { useMutation, useLazyQuery } from '@apollo/client';\r\nimport { Modal, Button, Form, Input, Col, Upload, Card, Skeleton, Space } from \"antd\";\r\nimport { PlusOutlined, PictureOutlined } from '@ant-design/icons';\r\nimport moment from 'moment';\r\nimport { get } from 'lodash';\r\n\r\n// Styles\r\nimport \"../../App.css\";\r\n\r\n// Context\r\nimport { PostContext } from \"../../context/posts\";\r\n\r\n// Query\r\nimport { CREATE_POST, GET_POST } from '../../GraphQL/Queries';\r\n\r\n// Init Firebase\r\nimport firebase from 'firebase/app'\r\nimport 'firebase/storage'\r\nconst  storage = firebase.storage()\r\n\r\nconst InitialState = {\r\n  previewVisible: false,\r\n  confirmLoading: false,\r\n  visible: false,\r\n  previewImage: '',\r\n  previewTitle: '',\r\n  fileList:[],\r\n  lat: '',\r\n  lng: '',\r\n  uploaded:[],\r\n  isFinishUpload: false,\r\n  text: ''\r\n};\r\n\r\nconst UploadButton = () => (\r\n  <div>\r\n    <PlusOutlined />\r\n    <div style={{ marginTop: 8 }}>Upload</div>\r\n  </div>\r\n);\r\n\r\nexport default function ModalPost() {\r\n  // Context\r\n  const {\r\n    isOpenNewPost,\r\n    repost = '',\r\n    toggleOpenNewPost,\r\n    createPost: updatePosts\r\n  } = useContext(PostContext);\r\n\r\n  // Local State\r\n  const [state, setState] = useState(InitialState);\r\n  const [form] = Form.useForm();\r\n\r\n  // Query\r\n  const [getRepost, { data: dataRepost, loading }] = useLazyQuery(GET_POST);\r\n  const getPost = get(dataRepost, 'getPost') || {};\r\n  \r\n  const [createPost] = useMutation(\r\n    CREATE_POST,\r\n    {\r\n      onCompleted: (data) => {\r\n        const { createPost } = data;\r\n        \r\n        // Reset Form\r\n        setState(InitialState);\r\n        form.resetFields();\r\n\r\n        // Update Redux\r\n        toggleOpenNewPost(false)\r\n        updatePosts({\r\n          ...createPost,\r\n          repost: getPost\r\n        });\r\n      }\r\n    }\r\n  )\r\n\r\n  const { isFinishUpload, previewVisible, previewImage, fileList, previewTitle, lat, lng, uploaded} = state;\r\n\r\n  ///////// location /////////\r\n  function showPosition(position) {\r\n    setState({\r\n      ...state,\r\n      lat: position.coords.latitude,\r\n      lng: position.coords.longitude\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    navigator.geolocation.getCurrentPosition(showPosition)\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (repost) {\r\n      getRepost({ variables: { id: repost }});\r\n    }\r\n  }, [repost]);\r\n\r\n  useEffect(() => {\r\n    if (isOpenNewPost && !!uploaded.length || (state.text && !uploaded.length && isFinishUpload)) {\r\n      const { text= '' } = state;\r\n      const variables = {\r\n        text,\r\n        media: uploaded,\r\n        location: {\r\n          lat,\r\n          lng\r\n        },\r\n        repost: repost || ''\r\n      };\r\n\r\n      createPost( { variables });\r\n    }\r\n  }, [uploaded, isFinishUpload]);\r\n\r\n  //////////////////// Upload Photo Function Start//////////////////////////////////\r\n\r\n  function getBase64(file) {\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => resolve(reader.result);\r\n      reader.onerror = error => reject(error);\r\n    });\r\n  }\r\n\r\n  const handleCancel = () => setState({...state, previewVisible: false });\r\n\r\n  const handleCancelModal = () => {\r\n    toggleOpenNewPost(false);\r\n  };\r\n\r\n  const handlePreview = async file => {\r\n    if (!file.url && !file.preview) {\r\n      file.preview = await getBase64(file.originFileObj);\r\n    }\r\n\r\n    setState({\r\n      ...state,\r\n      previewImage: file.url || file.preview,\r\n      previewVisible: true,\r\n      previewTitle: file.name || file.url.substring(file.url.lastIndexOf('/') + 1),\r\n    });\r\n  };\r\n\r\n  const handleChange = ({ fileList }) => {\r\n    const newFiles = fileList.map(file => ({ ...file, status: 'done'}))\r\n    setState({\r\n      ...state, \r\n      fileList: newFiles\r\n    });\r\n  }\r\n\r\n\r\n  //////////////////// Upload Photo Function Finish/////////////////////////////////\r\n\r\n  const onFinish = async (value) => {\r\n    let uploaded = [];\r\n    ////////////////fungsi upload///////////////////\r\n    if (fileList.length) {\r\n      uploaded = await Promise.all(fileList.map(async (elem) => {\r\n        const uploadTask = storage.ref(`images/${elem.originFileObj.name}`).put(elem.originFileObj)\r\n  \r\n        const url = await new Promise((resolve, reject) => {\r\n          uploadTask.on('state_changed',\r\n            () => {},\r\n            error => {\r\n              fileList.push({ ...elem, status: 'error' })\r\n              reject()\r\n            },\r\n            async () => {\r\n              const downloadUrl = await uploadTask.snapshot.ref.getDownloadURL();\r\n  \r\n              resolve(downloadUrl);\r\n            }\r\n          )\r\n        })\r\n  \r\n        return url\r\n      }));\r\n\r\n      setState({ ...state, uploaded, fileList, isFinishUpload: true, text: value.text });\r\n\r\n      return;\r\n    }\r\n\r\n\r\n    setState({ ...state, uploaded: [], isFinishUpload: true, text: value.text})\r\n    \r\n    return;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        key=\"addPost\"\r\n          visible={isOpenNewPost}\r\n          title={[\r\n            <p key=\"paragraf\">{repost ? 'Repost' : 'Post to'}</p>,\r\n            <div key=\"location\" style={{ position: \"absolute\", marginTop: 15, marginLeft: 60, width: 150 }}>\r\n              <h3 style={{ fontWeight: \"bold\" }}>Nearby</h3>\r\n              <a style={{ fontSize: 12 }}>Wild Park, Melbourne</a>\r\n            </div>,\r\n            <div key=\"location2\"style={{ width: 45 }}>\r\n              <a href=\"/\"><p className=\"location\" style={{ marginTop: 10 }} /></a>\r\n            </div>\r\n          ]}\r\n          onCancel={handleCancelModal}\r\n          footer={null}\r\n        >\r\n          {!!repost && (\r\n            <>\r\n             {loading ?\r\n              (\r\n                <div style={{ marginBottom: 10 }}>\r\n                  <Space>\r\n                    <Skeleton.Avatar active={true} size={\"large\"}/>\r\n                    <Skeleton.Button style={{ width: window.isMobile ? '200px' : '400px'}} size={\"small\"} />\r\n                  </Space>\r\n                  <Skeleton.Button style={{ width: window.isMobile ? '250px' : '450px', marginTop: 10}} size={\"small\"} />\r\n                </div>\r\n              )\r\n             : (\r\n              <Card bodyStyle={{ padding: '10px 12px' }} style={{ width: '100%', height: '100%', borderRadius: 10, backgroundColor: '#f5f5f5', borderColor: '#ededed', padding: 0, marginBottom: 12 }}>\r\n                <div style={{ display: 'flex'}}>\r\n                  <p className=\"ic-location-small\" style={{ margin: 0}}/>\r\n                  <div style={{ fontWeight: 600, paddingLeft: 10 }}>Jakarta, Indonesia</div>\r\n                </div>\r\n                <span style={{ fontSize: 12 }}>{moment(getPost.createdAt).fromNow()}</span>\r\n                <div style={{ marginTop: 5 }}>{getPost.text}</div>\r\n              </Card>\r\n             )}\r\n            </>\r\n          )}\r\n        <Form form={form} name=\"nest-messages\" onFinish={onFinish}>\r\n          <Form.Item name=\"text\"  >\r\n            <Input.TextArea bordered={false} placeholder=\"What's your story\" />\r\n          </Form.Item>\r\n          {fileList.length > 0 && (\r\n            <Form.Item name=\"foto\" style={{ marginBottom: 0 }} > \r\n              <Upload\r\n                action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n                listType=\"picture-card\"\r\n                fileList={fileList}\r\n                accept=\"video/*, image/*\"\r\n                onPreview={handlePreview}\r\n                onChange={handleChange}\r\n              >\r\n                {fileList.length >= 5 ? null : <UploadButton />}\r\n              </Upload>\r\n            </Form.Item>\r\n          )}\r\n          <div style={{ position: 'relative', width: '100%'}}>\r\n            {/* <Divider /> */}\r\n            <hr style={{\r\n              border: 'none',\r\n              borderTop: '1px solid #d9d9d9',\r\n              height: '0.2px'\r\n            }} />\r\n            <Col span={12}>\r\n              <Form.Item name=\"foto\" style={{marginBottom: 0}}> \r\n                <Upload\r\n                accept=\"video/*, image/*\"\r\n                action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n                showUploadList={null}\r\n                onChange={handleChange}\r\n                >\r\n                  <PictureOutlined />\r\n                </Upload>\r\n              </Form.Item>\r\n              </Col>\r\n            <Button htmlType=\"submit\" key=\"submit\" type=\"primary\" \r\n              style={{ backgroundColor: '#7958f5', borderRadius: 20, position:\"absolute\",  bottom:\"3%\", right: 0, height:25, fontSize: 10}}>\r\n              Post\r\n            </Button>\r\n          </div>\r\n         \r\n          </Form>\r\n          <Modal\r\n            visible={previewVisible}\r\n            title={previewTitle}\r\n            footer={null}\r\n            onCancel={handleCancel}\r\n          >\r\n            <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\r\n          </Modal>\r\n        </Modal>\r\n        \r\n    </div>\r\n  );\r\n}\r\n","D:\\Web Dev\\curious-app75\\frontend\\src\\components\\BottomBar\\index.jsx",[],"D:\\Web Dev\\curious-app75\\frontend\\src\\components\\Notification.jsx",["320","321","322","323"],"import React, { useContext } from \"react\";\r\nimport { Card, Button } from \"antd\";\r\nimport { AuthContext } from \"../context/auth\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { READ_NOTIFICATION } from \"../GraphQL/Mutations\";\r\nimport { Row, Col, Dropdown, Menu} from 'antd';\r\n\r\nimport { EllipsisOutlined } from \"@ant-design/icons\";\r\n\r\nexport default function Notification() {\r\n  const { notifications, notificationRead } = useContext(AuthContext);\r\n\r\n  const [readNotification] = useMutation(READ_NOTIFICATION, {\r\n    update(_, { data: { readNotification } }) {\r\n      console.log(readNotification);\r\n      notificationRead(readNotification);\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div style={{ position: 'sticky', zIndex: 1}}>\r\n      <div style={{ position: \"absolute\", left: 0, right: 0, width: '100%', }}>\r\n        <Card\r\n          title=\"Notification\"\r\n          extra={\r\n            <Dropdown\r\n                      overlay={\r\n                        <Menu>\r\n                          <Menu.Item key=\"0\">READ ALL</Menu.Item>\r\n                          <Menu.Item key=\"1\" onClick={(e) => console.log(e)}>\r\n                            CLEAR ALL\r\n                          </Menu.Item>\r\n                        </Menu>\r\n                      }\r\n                      trigger={[\"click\"]}\r\n                      placement=\"bottomRight\"\r\n                    >\r\n                      <a\r\n                        className=\"ant-dropdown-link\"\r\n                        onClick={(e) => e.preventDefault()}\r\n                      >\r\n                        <EllipsisOutlined />\r\n                      </a>\r\n                    </Dropdown>\r\n          }\r\n          style={{ width: \"100%\" }}\r\n          className=\"testttttt\"\r\n        >\r\n          <div style={{margin: -22}}>\r\n\r\n          {notifications &&\r\n            notifications.map((notif, key) => {\r\n              let type = \"\";\r\n              let text = \"\";\r\n              switch (notif.type) {\r\n                case \"LIKE\":\r\n                  type = \"liked\";\r\n                  text = \"iike\";\r\n                  break;\r\n                case \"COMMENT\":\r\n                  type = \"commented\";\r\n                  text = \"comment\";\r\n                default:\r\n                  break;\r\n              }\r\n\r\n              return (\r\n                <Link\r\n                  to={`/post/${notif.postId}`}\r\n                  onClick={() =>\r\n                    readNotification({ variables: { id: notif.id } })\r\n                  }\r\n                  name={notif.id}\r\n                  key={`notif${key}`}\r\n                  style={notif.read ? { fontSize: 13, color: \"black\",  } : { fontSize: 13, fontWeight: \"bold\", color: \"black\", }}\r\n                >\r\n                  <div className='notifContainer'>\r\n                    <Row>\r\n                      <Col span={22}>\r\n                      <p style={{ marginBottom: 5}}>\r\n                    {notif.displayName}{\" \"}\r\n                    <span>{`${type} your post.`}</span>{\" \"}\r\n                  </p>\r\n                      </Col>\r\n                      <Col span={2} style={{color: '#7958f5'}}>\r\n                        {!notif.read && <p>&#8226;</p> }\r\n                      \r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                  \r\n\r\n                  \r\n                </Link>\r\n              );\r\n            })}\r\n          </div>\r\n          \r\n        </Card>\r\n      </div>\r\n    </div>\r\n    \r\n  );\r\n}\r\n","D:\\Web Dev\\curious-app75\\frontend\\src\\components\\Sidebar.jsx",["324"],{"ruleId":"325","severity":1,"message":"326","line":28,"column":11,"nodeType":"327","messageId":"328","endLine":29,"endColumn":40},{"ruleId":"329","replacedBy":"330"},{"ruleId":"331","replacedBy":"332"},{"ruleId":"333","severity":1,"message":"334","line":1,"column":17,"nodeType":"335","messageId":"336","endLine":1,"endColumn":27},{"ruleId":"333","severity":1,"message":"334","line":1,"column":17,"nodeType":"335","messageId":"336","endLine":1,"endColumn":27},{"ruleId":"333","severity":1,"message":"337","line":5,"column":5,"nodeType":"335","messageId":"336","endLine":5,"endColumn":12},{"ruleId":"333","severity":1,"message":"338","line":13,"column":10,"nodeType":"335","messageId":"336","endLine":13,"endColumn":32},{"ruleId":"333","severity":1,"message":"339","line":35,"column":7,"nodeType":"335","messageId":"336","endLine":35,"endColumn":21},{"ruleId":"333","severity":1,"message":"340","line":1,"column":22,"nodeType":"335","messageId":"336","endLine":1,"endColumn":31},{"ruleId":"333","severity":1,"message":"341","line":7,"column":8,"nodeType":"335","messageId":"336","endLine":7,"endColumn":22},{"ruleId":"342","severity":1,"message":"343","line":37,"column":8,"nodeType":"344","endLine":37,"endColumn":26,"suggestions":"345"},{"ruleId":"333","severity":1,"message":"346","line":57,"column":9,"nodeType":"335","messageId":"336","endLine":57,"endColumn":14},{"ruleId":"333","severity":1,"message":"347","line":4,"column":27,"nodeType":"335","messageId":"336","endLine":4,"endColumn":36},{"ruleId":"333","severity":1,"message":"341","line":7,"column":8,"nodeType":"335","messageId":"336","endLine":7,"endColumn":22},{"ruleId":"342","severity":1,"message":"348","line":35,"column":8,"nodeType":"344","endLine":35,"endColumn":26,"suggestions":"349"},{"ruleId":"333","severity":1,"message":"350","line":9,"column":11,"nodeType":"335","messageId":"336","endLine":9,"endColumn":22},{"ruleId":"333","severity":1,"message":"351","line":44,"column":7,"nodeType":"335","messageId":"336","endLine":44,"endColumn":15},{"ruleId":"342","severity":1,"message":"352","line":67,"column":6,"nodeType":"344","endLine":67,"endColumn":10,"suggestions":"353"},{"ruleId":"342","severity":1,"message":"354","line":97,"column":6,"nodeType":"344","endLine":97,"endColumn":24,"suggestions":"355"},{"ruleId":"342","severity":1,"message":"356","line":118,"column":6,"nodeType":"344","endLine":118,"endColumn":22,"suggestions":"357"},{"ruleId":"358","severity":1,"message":"359","line":167,"column":21,"nodeType":"360","endLine":167,"endColumn":80},{"ruleId":"361","severity":1,"message":"362","line":184,"column":23,"nodeType":"360","endLine":187,"endColumn":24},{"ruleId":"363","severity":1,"message":"364","line":220,"column":35,"nodeType":"365","messageId":"366","endLine":220,"endColumn":37},{"ruleId":"367","severity":1,"message":"368","line":222,"column":97,"nodeType":"369","messageId":"366","endLine":222,"endColumn":106},{"ruleId":"363","severity":1,"message":"364","line":233,"column":46,"nodeType":"365","messageId":"366","endLine":233,"endColumn":48},{"ruleId":"361","severity":1,"message":"362","line":279,"column":25,"nodeType":"360","endLine":282,"endColumn":26},{"ruleId":"333","severity":1,"message":"370","line":47,"column":28,"nodeType":"335","messageId":"336","endLine":47,"endColumn":32},{"ruleId":"342","severity":1,"message":"371","line":59,"column":8,"nodeType":"344","endLine":59,"endColumn":25,"suggestions":"372"},{"ruleId":"342","severity":1,"message":"373","line":88,"column":8,"nodeType":"344","endLine":88,"endColumn":29,"suggestions":"374"},{"ruleId":"375","severity":1,"message":"376","line":111,"column":98,"nodeType":"377","messageId":"378","endLine":111,"endColumn":100},{"ruleId":"363","severity":1,"message":"364","line":167,"column":63,"nodeType":"365","messageId":"366","endLine":167,"endColumn":65},{"ruleId":"363","severity":1,"message":"364","line":168,"column":62,"nodeType":"365","messageId":"366","endLine":168,"endColumn":64},{"ruleId":"363","severity":1,"message":"379","line":169,"column":57,"nodeType":"365","messageId":"366","endLine":169,"endColumn":59},{"ruleId":"363","severity":1,"message":"379","line":169,"column":69,"nodeType":"365","messageId":"366","endLine":169,"endColumn":71},{"ruleId":"380","severity":1,"message":"381","line":172,"column":37,"nodeType":"360","endLine":179,"endColumn":39},{"ruleId":"358","severity":1,"message":"359","line":195,"column":21,"nodeType":"360","endLine":202,"endColumn":23},{"ruleId":"358","severity":1,"message":"359","line":215,"column":30,"nodeType":"360","endLine":215,"endColumn":81},{"ruleId":"342","severity":1,"message":"382","line":29,"column":8,"nodeType":"344","endLine":29,"endColumn":18,"suggestions":"383"},{"ruleId":"342","severity":1,"message":"384","line":45,"column":8,"nodeType":"344","endLine":45,"endColumn":26,"suggestions":"385"},{"ruleId":"333","severity":1,"message":"340","line":1,"column":39,"nodeType":"335","messageId":"336","endLine":1,"endColumn":48},{"ruleId":"333","severity":1,"message":"340","line":1,"column":39,"nodeType":"335","messageId":"336","endLine":1,"endColumn":48},{"ruleId":"333","severity":1,"message":"386","line":27,"column":10,"nodeType":"335","messageId":"336","endLine":27,"endColumn":15},{"ruleId":"358","severity":1,"message":"359","line":24,"column":31,"nodeType":"360","endLine":24,"endColumn":68},{"ruleId":"333","severity":1,"message":"340","line":1,"column":39,"nodeType":"335","messageId":"336","endLine":1,"endColumn":48},{"ruleId":"333","severity":1,"message":"386","line":39,"column":10,"nodeType":"335","messageId":"336","endLine":39,"endColumn":15},{"ruleId":"387","severity":1,"message":"388","line":113,"column":3,"nodeType":"389","messageId":"390","endLine":126,"endColumn":4},{"ruleId":"342","severity":1,"message":"391","line":163,"column":6,"nodeType":"344","endLine":163,"endColumn":13,"suggestions":"392"},{"ruleId":"342","severity":1,"message":"393","line":192,"column":6,"nodeType":"344","endLine":192,"endColumn":21,"suggestions":"394"},{"ruleId":"342","severity":1,"message":"395","line":265,"column":5,"nodeType":"344","endLine":265,"endColumn":12,"suggestions":"396"},{"ruleId":"333","severity":1,"message":"397","line":3,"column":24,"nodeType":"335","messageId":"336","endLine":3,"endColumn":32},{"ruleId":"342","severity":1,"message":"398","line":33,"column":8,"nodeType":"344","endLine":33,"endColumn":18,"suggestions":"399"},{"ruleId":"342","severity":1,"message":"384","line":50,"column":8,"nodeType":"344","endLine":50,"endColumn":26,"suggestions":"400"},{"ruleId":"333","severity":1,"message":"401","line":1,"column":32,"nodeType":"335","messageId":"336","endLine":1,"endColumn":39},{"ruleId":"367","severity":1,"message":"402","line":115,"column":9,"nodeType":"369","messageId":"366","endLine":115,"endColumn":14},{"ruleId":"333","severity":1,"message":"403","line":1,"column":10,"nodeType":"335","messageId":"336","endLine":1,"endColumn":16},{"ruleId":"333","severity":1,"message":"404","line":1,"column":25,"nodeType":"335","messageId":"336","endLine":1,"endColumn":29},{"ruleId":"333","severity":1,"message":"334","line":2,"column":17,"nodeType":"335","messageId":"336","endLine":2,"endColumn":27},{"ruleId":"333","severity":1,"message":"405","line":5,"column":27,"nodeType":"335","messageId":"336","endLine":5,"endColumn":33},{"ruleId":"363","severity":1,"message":"364","line":14,"column":47,"nodeType":"365","messageId":"366","endLine":14,"endColumn":49},{"ruleId":"363","severity":1,"message":"364","line":26,"column":37,"nodeType":"365","messageId":"366","endLine":26,"endColumn":39},{"ruleId":"406","severity":1,"message":"407","line":1,"column":1,"nodeType":"408","endLine":110,"endColumn":2},{"ruleId":"333","severity":1,"message":"409","line":27,"column":10,"nodeType":"335","messageId":"336","endLine":27,"endColumn":20},{"ruleId":"342","severity":1,"message":"356","line":87,"column":6,"nodeType":"344","endLine":87,"endColumn":22,"suggestions":"410"},{"ruleId":"358","severity":1,"message":"359","line":123,"column":21,"nodeType":"360","endLine":123,"endColumn":75},{"ruleId":"363","severity":1,"message":"364","line":126,"column":29,"nodeType":"365","messageId":"366","endLine":126,"endColumn":31},{"ruleId":"361","severity":1,"message":"362","line":178,"column":21,"nodeType":"360","endLine":181,"endColumn":22},{"ruleId":"358","severity":1,"message":"359","line":205,"column":21,"nodeType":"360","endLine":205,"endColumn":75},{"ruleId":"363","severity":1,"message":"364","line":208,"column":29,"nodeType":"365","messageId":"366","endLine":208,"endColumn":31},{"ruleId":"363","severity":1,"message":"364","line":227,"column":35,"nodeType":"365","messageId":"366","endLine":227,"endColumn":37},{"ruleId":"367","severity":1,"message":"368","line":234,"column":21,"nodeType":"369","messageId":"366","endLine":234,"endColumn":30},{"ruleId":"363","severity":1,"message":"364","line":245,"column":29,"nodeType":"365","messageId":"366","endLine":245,"endColumn":31},{"ruleId":"363","severity":1,"message":"364","line":259,"column":29,"nodeType":"365","messageId":"366","endLine":259,"endColumn":31},{"ruleId":"358","severity":1,"message":"359","line":357,"column":21,"nodeType":"360","endLine":361,"endColumn":23},{"ruleId":"358","severity":1,"message":"359","line":364,"column":21,"nodeType":"360","endLine":368,"endColumn":23},{"ruleId":"358","severity":1,"message":"359","line":374,"column":23,"nodeType":"360","endLine":385,"endColumn":25},{"ruleId":"333","severity":1,"message":"403","line":1,"column":10,"nodeType":"335","messageId":"336","endLine":1,"endColumn":16},{"ruleId":"333","severity":1,"message":"411","line":1,"column":18,"nodeType":"335","messageId":"336","endLine":1,"endColumn":23},{"ruleId":"333","severity":1,"message":"404","line":1,"column":25,"nodeType":"335","messageId":"336","endLine":1,"endColumn":29},{"ruleId":"333","severity":1,"message":"334","line":3,"column":17,"nodeType":"335","messageId":"336","endLine":3,"endColumn":27},{"ruleId":"333","severity":1,"message":"405","line":6,"column":27,"nodeType":"335","messageId":"336","endLine":6,"endColumn":33},{"ruleId":"333","severity":1,"message":"412","line":20,"column":7,"nodeType":"335","messageId":"336","endLine":20,"endColumn":16},{"ruleId":"333","severity":1,"message":"413","line":26,"column":9,"nodeType":"335","messageId":"336","endLine":26,"endColumn":15},{"ruleId":"333","severity":1,"message":"414","line":7,"column":10,"nodeType":"335","messageId":"336","endLine":7,"endColumn":29},{"ruleId":"333","severity":1,"message":"415","line":1,"column":10,"nodeType":"335","messageId":"336","endLine":1,"endColumn":15},{"ruleId":"333","severity":1,"message":"340","line":1,"column":29,"nodeType":"335","messageId":"336","endLine":1,"endColumn":38},{"ruleId":"342","severity":1,"message":"416","line":94,"column":6,"nodeType":"344","endLine":94,"endColumn":8,"suggestions":"417"},{"ruleId":"342","severity":1,"message":"418","line":100,"column":6,"nodeType":"344","endLine":100,"endColumn":14,"suggestions":"419"},{"ruleId":"420","severity":1,"message":"421","line":103,"column":23,"nodeType":"422","messageId":"423","endLine":103,"endColumn":25},{"ruleId":"420","severity":1,"message":"421","line":103,"column":44,"nodeType":"422","messageId":"423","endLine":103,"endColumn":46},{"ruleId":"342","severity":1,"message":"424","line":117,"column":6,"nodeType":"344","endLine":117,"endColumn":32,"suggestions":"425"},{"ruleId":"361","severity":1,"message":"362","line":205,"column":15,"nodeType":"360","endLine":205,"endColumn":43},{"ruleId":"333","severity":1,"message":"403","line":2,"column":16,"nodeType":"335","messageId":"336","endLine":2,"endColumn":22},{"ruleId":"361","severity":1,"message":"362","line":39,"column":23,"nodeType":"360","endLine":42,"endColumn":24},{"ruleId":"333","severity":1,"message":"426","line":63,"column":19,"nodeType":"335","messageId":"336","endLine":63,"endColumn":23},{"ruleId":"325","severity":1,"message":"326","line":64,"column":17,"nodeType":"327","messageId":"328","endLine":65,"endColumn":25},{"ruleId":"358","severity":1,"message":"359","line":100,"column":17,"nodeType":"360","endLine":100,"endColumn":71},"no-fallthrough","Expected a 'break' statement before 'default'.","SwitchCase","default","no-native-reassign",["427"],"no-negated-in-lhs",["428"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'Tooltip' is defined but never used.","'QuestionCircleOutlined' is defined but never used.","'formItemLayout' is assigned a value but never used.","'useEffect' is defined but never used.","'InfiniteScroll' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'loadingData' and 'setSubscribePosts'. Either include them or remove the dependency array.","ArrayExpression",["429"],"'range' is assigned a value but never used.","'GET_POSTS' is defined but never used.","React Hook useEffect has missing dependencies: 'loadingData' and 'setMutedPost'. Either include them or remove the dependency array.",["430"],"'breakPoints' is assigned a value but never used.","'IconText' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getPost'. Either include it or remove the dependency array.",["431"],"React Hook useEffect has missing dependencies: 'loadingData' and 'setPost'. Either include them or remove the dependency array.",["432"],"React Hook useEffect has a missing dependency: 'repost'. Either include it or remove the dependency array.",["433"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-dupe-keys","Duplicate key 'objectFit'.","ObjectExpression","'data' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setPosts'. Either include it or remove the dependency array.",["434"],"React Hook useEffect has a missing dependency: 'changePPuser'. Either include it or remove the dependency array.",["435"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Expected '!==' and instead saw '!='.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","React Hook useEffect has a missing dependency: 'getPosts'. Either include it or remove the dependency array.",["436"],"React Hook useEffect has missing dependencies: 'loadingData' and 'setPosts'. Either include them or remove the dependency array.",["437"],"'login' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has missing dependencies: 'called', 'loadDataUser', and 'refetch'. Either include them or remove the dependency array.",["438"],"React Hook useEffect has a missing dependency: 'error'. Either include it or remove the dependency array.",["439"],"React Hook useMemo has missing dependencies: 'facebookData', 'googleData', 'liked', 'login', 'notifications', and 'user'. Either include them or remove the dependency array.",["440"],"'useQuery' is defined but never used.","React Hook useEffect has missing dependencies: 'getPosts' and 'range'. Either include them or remove the dependency array.",["441"],["442"],"'useMemo' is defined but never used.","Duplicate key 'posts'.","'Button' is defined but never used.","'Tabs' is defined but never used.","'Sticky' is defined but never used.","import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","'repostData' is assigned a value but never used.",["443"],"'Radio' is defined but never used.","'onChange2' is assigned a value but never used.","'value2' is assigned a value but never used.","'LOGIN_USER_FACEBOOK' is defined but never used.","'Space' is defined but never used.","React Hook useEffect has a missing dependency: 'showPosition'. Either include it or remove the dependency array.",["444"],"React Hook useEffect has a missing dependency: 'getRepost'. Either include it or remove the dependency array.",["445"],"no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","React Hook useEffect has missing dependencies: 'createPost', 'isOpenNewPost', 'lat', 'lng', 'repost', and 'state'. Either include them or remove the dependency array.",["446"],"'text' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"447","fix":"448"},{"desc":"449","fix":"450"},{"desc":"451","fix":"452"},{"desc":"453","fix":"454"},{"desc":"455","fix":"456"},{"desc":"457","fix":"458"},{"desc":"459","fix":"460"},{"desc":"461","fix":"462"},{"desc":"463","fix":"464"},{"desc":"465","fix":"466"},{"desc":"467","fix":"468"},{"desc":"469","fix":"470"},{"desc":"471","fix":"472"},{"desc":"463","fix":"473"},{"desc":"455","fix":"474"},{"desc":"475","fix":"476"},{"desc":"477","fix":"478"},{"desc":"479","fix":"480"},"Update the dependencies array to be: [data, _isMounted, setSubscribePosts, loadingData]",{"range":"481","text":"482"},"Update the dependencies array to be: [data, _isMounted, setMutedPost, loadingData]",{"range":"483","text":"484"},"Update the dependencies array to be: [getPost, id]",{"range":"485","text":"486"},"Update the dependencies array to be: [data, _isMounted, setPost, loadingData]",{"range":"487","text":"488"},"Update the dependencies array to be: [post, isRepost, repost]",{"range":"489","text":"490"},"Update the dependencies array to be: [getProfilePosts, setPosts]",{"range":"491","text":"492"},"Update the dependencies array to be: [url, isFinishUpload, changePPuser]",{"range":"493","text":"494"},"Update the dependencies array to be: [getPosts, location]",{"range":"495","text":"496"},"Update the dependencies array to be: [data, _isMounted, setPosts, loadingData]",{"range":"497","text":"498"},"Update the dependencies array to be: [called, loadDataUser, refetch, token]",{"range":"499","text":"500"},"Update the dependencies array to be: [loading, data, error]",{"range":"501","text":"502"},"Update the dependencies array to be: [facebookData, googleData, liked, login, notifications, user]",{"range":"503","text":"504"},"Update the dependencies array to be: [getPosts, location, range]",{"range":"505","text":"506"},{"range":"507","text":"498"},{"range":"508","text":"490"},"Update the dependencies array to be: [showPosition]",{"range":"509","text":"510"},"Update the dependencies array to be: [getRepost, repost]",{"range":"511","text":"512"},"Update the dependencies array to be: [uploaded, isFinishUpload, isOpenNewPost, state, lat, lng, repost, createPost]",{"range":"513","text":"514"},[1120,1138],"[data, _isMounted, setSubscribePosts, loadingData]",[1045,1063],"[data, _isMounted, setMutedPost, loadingData]",[1800,1804],"[getPost, id]",[2434,2452],"[data, _isMounted, setPost, loadingData]",[3017,3033],"[post, isRepost, repost]",[2042,2059],"[getProfilePosts, setPosts]",[2923,2944],"[url, isFinishUpload, changePPuser]",[969,979],"[getPosts, location]",[1346,1364],"[data, _isMounted, setPosts, loadingData]",[3720,3727],"[called, loadDataUser, refetch, token]",[4379,4394],"[loading, data, error]",[5830,5837],"[facebookData, googleData, liked, login, notifications, user]",[1097,1107],"[getPosts, location, range]",[1481,1499],[2843,2859],[2254,2256],"[showPosition]",[2362,2370],"[getRepost, repost]",[2754,2780],"[uploaded, isFinishUpload, isOpenNewPost, state, lat, lng, repost, createPost]"]